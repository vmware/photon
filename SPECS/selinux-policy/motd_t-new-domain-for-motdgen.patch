From d82e154e0a633b2510e15e3e277d1cec2c811a3d Mon Sep 17 00:00:00 2001
From: Alexey Makhalov <amakhalov@vmware.com>
Date: Thu, 3 Mar 2022 01:03:35 +0000
Subject: [PATCH 09/20] motd_t: new domain for motdgen

---
 policy/modules/contrib/motd.fc     |  5 +++++
 policy/modules/contrib/motd.if     | 22 ++++++++++++++++++++++
 policy/modules/contrib/motd.te     | 18 ++++++++++++++++++
 policy/modules/services/ssh.te     |  3 +++
 policy/modules/system/authlogin.fc |  2 --
 policy/modules/system/authlogin.te |  9 ---------
 6 files changed, 48 insertions(+), 11 deletions(-)
 create mode 100644 policy/modules/contrib/motd.fc
 create mode 100644 policy/modules/contrib/motd.if
 create mode 100644 policy/modules/contrib/motd.te

diff --git a/policy/modules/contrib/motd.fc b/policy/modules/contrib/motd.fc
new file mode 100644
index 0000000..95e4f9b
--- /dev/null
+++ b/policy/modules/contrib/motd.fc
@@ -0,0 +1,5 @@
+/usr/bin/motdgen --      gen_context(system_u:object_r:motd_exec_t,s0)
+
+/var/run/motd		--	gen_context(system_u:object_r:motd_var_run_t,s0)
+/var/run/motd\.d(/.*)?		gen_context(system_u:object_r:motd_var_run_t,s0)
+/var/run/motdgen(/.*)?		gen_context(system_u:object_r:motd_var_run_t,s0)
diff --git a/policy/modules/contrib/motd.if b/policy/modules/contrib/motd.if
new file mode 100644
index 0000000..1405d9b
--- /dev/null
+++ b/policy/modules/contrib/motd.if
@@ -0,0 +1,22 @@
+########################################
+## <summary>
+##      Execute the motdgen tool in the caller domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`motdgen_exec',`
+        gen_require(`
+                type motd_t, motd_exec_t;
+        ')
+
+        corecmd_search_bin($1)
+        can_exec($1, motd_exec_t)
+
+        allow $1 motd_t:process transition;
+        type_transition $1 motd_exec_t:process motd_t;
+')
+
diff --git a/policy/modules/contrib/motd.te b/policy/modules/contrib/motd.te
new file mode 100644
index 0000000..33d7a1b
--- /dev/null
+++ b/policy/modules/contrib/motd.te
@@ -0,0 +1,18 @@
+policy_module(motd, 1.0)
+
+attribute_role motd_roles;
+roleattribute system_r motd_roles;
+
+type motd_t;
+type motd_exec_t;
+init_system_domain(motd_t, motd_exec_t)
+
+type motd_var_run_t;
+files_type(motd_var_run_t);
+
+role motd_roles types motd_t;
+
+auth_login_pgm_domain(motd_t);
+files_read_var_files(motd_t);
+manage_files_pattern(motd_t, motd_var_run_t, motd_var_run_t);
+
diff --git a/policy/modules/services/ssh.te b/policy/modules/services/ssh.te
index bf988b7..a09bffa 100644
--- a/policy/modules/services/ssh.te
+++ b/policy/modules/services/ssh.te
@@ -318,6 +318,9 @@ term_setattr_all_ttys(sshd_t)
 term_relabelto_all_ptys(sshd_t)
 term_use_ptmx(sshd_t)
 
+allow sshd_t self:alg_socket { create bind accept };
+motdgen_exec(sshd_t);
+
 # for X forwarding
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_tcp_bind_vnc_port(sshd_t)
diff --git a/policy/modules/system/authlogin.fc b/policy/modules/system/authlogin.fc
index bb63705..8161cc4 100644
--- a/policy/modules/system/authlogin.fc
+++ b/policy/modules/system/authlogin.fc
@@ -83,8 +83,6 @@ ifdef(`distro_gentoo', `
 
 /var/run/console(/.*)?	 	gen_context(system_u:object_r:pam_var_console_t,s0)
 /var/run/faillock(/.*)?		gen_context(system_u:object_r:faillog_t,s0)
-/var/run/motd		--	gen_context(system_u:object_r:motd_var_run_t,s0)
-/var/run/motd\.d(/.*)?		gen_context(system_u:object_r:motd_var_run_t,s0)
 /var/run/pam_mount(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/pam_ssh(/.*)?		gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/pam_timestamp(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
diff --git a/policy/modules/system/authlogin.te b/policy/modules/system/authlogin.te
index 1885fa6..8ba5900 100644
--- a/policy/modules/system/authlogin.te
+++ b/policy/modules/system/authlogin.te
@@ -77,11 +77,6 @@ files_pid_file(pam_var_console_t)
 type pam_var_run_t;
 files_pid_file(pam_var_run_t)
 
-# For MOTD files read by login programs, e.g. sshd, located in
-# /run/motd.d/, or symlinked out from /run/motd.d/
-type motd_var_run_t;
-files_type(motd_var_run_t);
-
 type shadow_t;
 files_auth_file(shadow_t)
 neverallow ~can_read_shadow_passwords shadow_t:file read;
@@ -649,10 +644,6 @@ selinux_compute_user_contexts(login_pgm)
 auth_manage_faillog(login_pgm)
 auth_manage_pam_pid(login_pgm)
 
-list_dirs_pattern(login_pgm, motd_var_run_t, motd_var_run_t);
-read_files_pattern(login_pgm, motd_var_run_t, motd_var_run_t);
-read_lnk_files_pattern(login_pgm, motd_var_run_t, motd_var_run_t);
-
 init_rw_utmp(login_pgm)
 
 logging_set_loginuid(login_pgm)
-- 
2.35.1

