From f0724df5724b9205b9c7ad1ba7adcd3f20131e1a Mon Sep 17 00:00:00 2001
From: Ankit Jain <ankitja@vmware.com>
Date: Tue, 14 Mar 2023 14:59:31 +0000
Subject: [PATCH 16/16] installer: Fix 'preinstall' dynamic value parsing

- Changed exception to warning log
  because it might happen that
  'password': {
       'crypt': true,
       'text': "$jkcgjgjhg$kjhcjhgd"
              }
  in this case text is crypted and it happens
  to be starting with '$' which our dynamic
  value parser thinks as dynamic value
- So, now we just log it saying it may
  be a dynamic value and proceed only if
  value is not found in os.environ
- Since, we don't know whether user actually
  missed to export the value or it may be the
  above case.

Change-Id: Ie52f09a0a2762763f4ee422e9c6584b1271bee53
Signed-off-by: Ankit Jain <ankitja@vmware.com>
---
 photon_installer/installer.py            | 12 +++++++-----
 photon_installer/modules/m_preinstall.py |  2 +-
 2 files changed, 8 insertions(+), 6 deletions(-)
 mode change 100755 => 100644 photon_installer/installer.py

diff --git a/photon_installer/installer.py b/photon_installer/installer.py
old mode 100755
new mode 100644
index c3bca52..8bc39b3
--- a/photon_installer/installer.py
+++ b/photon_installer/installer.py
@@ -221,18 +221,20 @@ class Installer(object):
                     if isinstance(value, str) and (value.startswith('$') and not value.startswith('$$')):
                         if value[1:] in os.environ:
                             install_config[key] = os.environ[value[1:]]
+                            self.logger.info(f"Parsed dynamic value for '{key}': '{install_config[key]}'")
                         else:
-                            raise Exception("Install configuration has dynamic value=\"{}\" for key=\"{}\" \
-                                            \n which is not exported in preinstall script. \
-                                            \n Please export dynamic values in preinstall script in ks file as below: \
-                                            \n export {}=\"<my-val>\"".format(value,key,value[1:]))
+                            self.logger.warning(f"\nInstall configuration may have dynamic value=\'{value}\' for key=\'{key}\',"
+                                             f"check if it need to be exported."
+                                             f"If so then please export dynamic values under preinstall script in ks file as below:"
+                                             f"\nexport {value[1:]}=\'<my-val>\'"
+                                             f"\nPlease refer https://github.com/vmware/photon-os-installer/blob/master/docs/ks_config.md#preinstall-optional")
 
 
     def _load_preinstall(self, install_config):
         self.install_config = install_config
         self._execute_modules(modules.commons.PRE_INSTALL)
         for fill_values in self._fill_dynamic_conf(install_config):
-            print(fill_values)
+            self.logger.info(f"{fill_values}")
 
 
     def _add_defaults(self, install_config):
diff --git a/photon_installer/modules/m_preinstall.py b/photon_installer/modules/m_preinstall.py
index ba1ccbb..05624b5 100644
--- a/photon_installer/modules/m_preinstall.py
+++ b/photon_installer/modules/m_preinstall.py
@@ -39,7 +39,7 @@ def execute(installer):
 
     for script in scripts:
         if not os.access(os.path.join(tempdir, script), os.X_OK):
-            installer.logger.warning("Post install script {} is not executable. Skipping execution of script.".format(script))
+            installer.logger.warning("Pre install script {} is not executable. Skipping execution of script.".format(script))
             continue
         installer.logger.info("Running script {}".format(script))
         cmd = ["/bin/bash"]
-- 
2.23.1

