From 2d5ccdedc6402f5729a9552d2f62e9615cb35acc Mon Sep 17 00:00:00 2001
From: Piyush Gupta <gpiyush@vmware.com>
Date: Tue, 10 Jan 2023 19:02:34 +0000
Subject: [PATCH 11/16] installer.py: Code cleanup

Make mount options more readable in mountpoint equals '/', remove
data=ordered if fstype is btrfs and set mount option to 'defaults' for
xfs.

Remove extra packages to install from pkg_list if filesystem equals "xfs" or "btrfs".

Change-Id: Iacbf93860e2c145f1c439918879ad20873816dae
---
 photon_installer/installer.py | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/photon_installer/installer.py b/photon_installer/installer.py
index cfd7388..048ee15 100755
--- a/photon_installer/installer.py
+++ b/photon_installer/installer.py
@@ -612,10 +612,17 @@ class Installer(object):
                 fsck = 2
 
                 # Add supported options according to partition filesystem
-                if partition.get('mountpoint', '') == '/' and partition.get('filesystem','') != 'xfs':
-                    options = options + ',barrier,noatime'
-                    if partition.get('filesystem','') != 'btrfs':
-                        options += ',data=ordered'
+                if partition.get('mountpoint', '') == '/':
+                    part_fstype = partition.get('filesystem','')
+                    if part_fstype in ['ext4', 'ext3', 'swap', 'vfat']:
+                        options += ',barrier,noatime,data=ordered'
+                    elif part_fstype == 'btrfs':
+                        options += ',barrier,noatime'
+                    elif part_fstype == 'xfs':
+                        pass
+                    else:
+                        self.logger.error(f"Filesystem type not supported: {part_fstype}")
+                        self.exit_gracefully()
                     fsck = 1
 
                 if ptype == PartitionType.SWAP:
@@ -1489,11 +1496,6 @@ class Installer(object):
                 elif partition['mountpoint'] == '/boot':
                     partitions_data['boot'] = partition['path']
                     partitions_data['bootdirectory'] = '/'
-            if 'filesystem' in partition and not partition.get('shadow', False):
-                if partition['filesystem'] == "xfs":
-                    self._add_packages_to_install('xfsprogs')
-                elif partition['filesystem'] == "btrfs":
-                    self._add_packages_to_install('btrfs-progs')
 
         # If no separate boot partition, then use /boot folder from root partition
         if 'boot' not in partitions_data:
-- 
2.23.1

