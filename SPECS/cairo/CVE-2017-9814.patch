diff -dupr a/src/cairo-analysis-surface.c b/src/cairo-analysis-surface.c
--- a/src/cairo-analysis-surface.c	2016-12-07 19:23:15.000000000 -0800
+++ b/src/cairo-analysis-surface.c	2017-10-10 15:31:44.838748131 -0700
@@ -118,7 +118,7 @@ attach_proxy (cairo_surface_t *source,
 {
     struct proxy *proxy;
 
-    proxy = malloc (sizeof (*proxy));
+    proxy = _cairo_malloc (sizeof (*proxy));
     if (unlikely (proxy == NULL))
 	return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -731,7 +731,7 @@ _cairo_analysis_surface_create (cairo_su
     if (unlikely (status))
 	return _cairo_surface_create_in_error (status);
 
-    surface = malloc (sizeof (cairo_analysis_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_analysis_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -920,7 +920,7 @@ _cairo_null_surface_create (cairo_conten
 {
     cairo_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_surface_t));
     if (unlikely (surface == NULL)) {
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
     }
diff -dupr a/src/cairo-base64-stream.c b/src/cairo-base64-stream.c
--- a/src/cairo-base64-stream.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-base64-stream.c	2017-10-10 15:31:44.838748131 -0700
@@ -125,7 +125,7 @@ _cairo_base64_stream_create (cairo_outpu
     if (output->status)
 	return _cairo_output_stream_create_in_error (output->status);
 
-    stream = malloc (sizeof (cairo_base64_stream_t));
+    stream = _cairo_malloc (sizeof (cairo_base64_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
diff -dupr a/src/cairo-base85-stream.c b/src/cairo-base85-stream.c
--- a/src/cairo-base85-stream.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-base85-stream.c	2017-10-10 15:31:44.838748131 -0700
@@ -114,7 +114,7 @@ _cairo_base85_stream_create (cairo_outpu
     if (output->status)
 	return _cairo_output_stream_create_in_error (output->status);
 
-    stream = malloc (sizeof (cairo_base85_stream_t));
+    stream = _cairo_malloc (sizeof (cairo_base85_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
diff -dupr a/src/cairo-cff-subset.c b/src/cairo-cff-subset.c
--- a/src/cairo-cff-subset.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-cff-subset.c	2017-10-10 15:31:44.838748131 -0700
@@ -568,7 +568,7 @@ cff_index_append_copy (cairo_array_t *in
 
     element.length = length;
     element.is_copy = TRUE;
-    element.data = malloc (element.length);
+    element.data = _cairo_malloc (element.length);
     if (unlikely (element.data == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -631,12 +631,12 @@ cff_dict_create_operator (int
 {
     cff_dict_operator_t *op;
 
-    op = malloc (sizeof (cff_dict_operator_t));
+    op = _cairo_malloc (sizeof (cff_dict_operator_t));
     if (unlikely (op == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
     _cairo_dict_init_key (op, operator);
-    op->operand = malloc (size);
+    op->operand = _cairo_malloc (size);
     if (unlikely (op->operand == NULL)) {
         free (op);
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
@@ -737,7 +737,7 @@ cff_dict_set_operands (cairo_hash_table_
     op = _cairo_hash_table_lookup (dict, &key.base);
     if (op != NULL) {
         free (op->operand);
-        op->operand = malloc (size);
+        op->operand = _cairo_malloc (size);
 	if (unlikely (op->operand == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -891,7 +891,7 @@ cairo_cff_font_read_name (cairo_cff_font
 		len -= 7;
 	    }
 	}
-        font->ps_name = malloc (len + 1);
+        font->ps_name = _cairo_malloc (len + 1);
         if (unlikely (font->ps_name == NULL))
             return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1875,7 +1875,7 @@ cairo_cff_font_create_cid_fontdict (cair
     cairo_status_t status;
 
     font->num_fontdicts = 1;
-    font->fd_dict = malloc (sizeof (cairo_hash_table_t *));
+    font->fd_dict = _cairo_malloc (sizeof (cairo_hash_table_t *));
     if (unlikely (font->fd_dict == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1886,11 +1886,11 @@ cairo_cff_font_create_cid_fontdict (cair
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
 
-    font->fd_subset_map = malloc (sizeof (int));
+    font->fd_subset_map = _cairo_malloc (sizeof (int));
     if (unlikely (font->fd_subset_map == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
-    font->private_dict_offset = malloc (sizeof (int));
+    font->private_dict_offset = _cairo_malloc (sizeof (int));
     if (unlikely (font->private_dict_offset == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1985,7 +1985,7 @@ cairo_cff_font_subset_font (cairo_cff_fo
 	if (unlikely (status))
 	    return status;
     }  else {
-	font->private_dict_offset = malloc (sizeof (int));
+	font->private_dict_offset = _cairo_malloc (sizeof (int));
 	if (unlikely (font->private_dict_offset == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
@@ -2577,7 +2577,7 @@ cairo_cff_font_generate (cairo_cff_font_
 
     /* If the PS name is not found, create a CairoFont-x-y name. */
     if (font->ps_name == NULL) {
-        font->ps_name = malloc (30);
+        font->ps_name = _cairo_malloc (30);
         if (unlikely (font->ps_name == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -2727,7 +2727,7 @@ _cairo_cff_font_load_opentype_cff (cairo
 
     font->is_opentype = TRUE;
     font->data_length = data_length;
-    font->data = malloc (data_length);
+    font->data = _cairo_malloc (data_length);
     if (unlikely (font->data == NULL))
         return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -2762,7 +2762,7 @@ _cairo_cff_font_load_cff (cairo_cff_font
     font->font_name = NULL;
     font->is_opentype = FALSE;
     font->data_length = data_length;
-    font->data = malloc (data_length);
+    font->data = _cairo_malloc (data_length);
     if (unlikely (font->data == NULL))
         return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -2991,7 +2991,7 @@ _cairo_cff_subset_init (cairo_cff_subset
     cff_subset->ascent = (double)font->ascent/font->units_per_em;
     cff_subset->descent = (double)font->descent/font->units_per_em;
 
-    cff_subset->data = malloc (length);
+    cff_subset->data = _cairo_malloc (length);
     if (unlikely (cff_subset->data == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto fail4;
@@ -3050,7 +3050,7 @@ _cairo_cff_scaled_font_is_cid_cff (cairo
 	(status = backend->load_truetype_table (scaled_font, TT_TAG_CFF,
 						0, NULL, &data_length)) == CAIRO_INT_STATUS_SUCCESS)
     {
-	data = malloc (data_length);
+	data = _cairo_malloc (data_length);
 	if (unlikely (data == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    return FALSE;
@@ -3067,7 +3067,7 @@ _cairo_cff_scaled_font_is_cid_cff (cairo
 	(status = backend->load_type1_data (scaled_font,
 					    0, NULL, &data_length)) == CAIRO_INT_STATUS_SUCCESS)
     {
-	data = malloc (data_length);
+	data = _cairo_malloc (data_length);
 	if (unlikely (data == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    return FALSE;
@@ -3140,7 +3140,7 @@ _cairo_cff_font_fallback_create (cairo_s
     cairo_status_t status;
     cairo_cff_font_t *font;
 
-    font = malloc (sizeof (cairo_cff_font_t));
+    font = _cairo_malloc (sizeof (cairo_cff_font_t));
     if (unlikely (font == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -3326,7 +3326,7 @@ cairo_cff_font_fallback_generate (cairo_
 	if (unlikely (status))
 	    return status;
     } else {
-	font->private_dict_offset = malloc (sizeof (int));
+	font->private_dict_offset = _cairo_malloc (sizeof (int));
 	if (unlikely (font->private_dict_offset == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
@@ -3403,7 +3403,7 @@ _cairo_cff_fallback_init (cairo_cff_subs
     cff_subset->ascent = (double)type2_subset.y_max/1000;
     cff_subset->descent = (double)type2_subset.y_min/1000;
 
-    cff_subset->data = malloc (length);
+    cff_subset->data = _cairo_malloc (length);
     if (unlikely (cff_subset->data == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto fail4;
diff -dupr a/src/cairo-clip.c b/src/cairo-clip.c
--- a/src/cairo-clip.c	2014-07-31 10:58:56.000000000 -0700
+++ b/src/cairo-clip.c	2017-10-10 15:31:44.838748131 -0700
@@ -62,7 +62,7 @@ _cairo_clip_path_create (cairo_clip_t *c
 
     clip_path = _freed_pool_get (&clip_path_pool);
     if (unlikely (clip_path == NULL)) {
-	clip_path = malloc (sizeof (cairo_clip_path_t));
+	clip_path = _cairo_malloc (sizeof (cairo_clip_path_t));
 	if (unlikely (clip_path == NULL))
 	    return NULL;
     }
@@ -108,7 +108,7 @@ _cairo_clip_create (void)
 
     clip = _freed_pool_get (&clip_pool);
     if (unlikely (clip == NULL)) {
-	clip = malloc (sizeof (cairo_clip_t));
+	clip = _cairo_malloc (sizeof (cairo_clip_t));
 	if (unlikely (clip == NULL))
 	    return NULL;
     }
@@ -735,7 +735,7 @@ _cairo_rectangle_list_create_in_error (c
     if (status == CAIRO_STATUS_CLIP_NOT_REPRESENTABLE)
 	return (cairo_rectangle_list_t*) &_cairo_rectangles_not_representable;
 
-    list = malloc (sizeof (*list));
+    list = _cairo_malloc (sizeof (*list));
     if (unlikely (list == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_rectangle_list_t*) &_cairo_rectangles_nil;
@@ -795,7 +795,7 @@ _cairo_clip_copy_rectangle_list (cairo_c
     }
 
  DONE:
-    list = malloc (sizeof (cairo_rectangle_list_t));
+    list = _cairo_malloc (sizeof (cairo_rectangle_list_t));
     if (unlikely (list == NULL)) {
         free (rectangles);
 	return ERROR_LIST (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-clip-tor-scan-converter.c b/src/cairo-clip-tor-scan-converter.c
--- a/src/cairo-clip-tor-scan-converter.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-clip-tor-scan-converter.c	2017-10-10 15:31:44.838748131 -0700
@@ -465,7 +465,7 @@ _pool_chunk_create(struct pool *pool, si
 {
     struct _pool_chunk *p;
 
-    p = malloc(size + sizeof(struct _pool_chunk));
+    p = _cairo_malloc (size + sizeof(struct _pool_chunk));
     if (unlikely (NULL == p))
 	longjmp (*pool->jmp, _cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-cogl-context.c b/src/cairo-cogl-context.c
--- a/src/cairo-cogl-context.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-cogl-context.c	2017-10-10 15:31:44.838748131 -0700
@@ -755,7 +755,7 @@ _cairo_cogl_context_create (void *target
 
     cr = _freed_pool_get (&context_pool);
     if (unlikely (cr == NULL)) {
-	cr = malloc (sizeof (cairo_cogl_context_t));
+	cr = _cairo_malloc (sizeof (cairo_cogl_context_t));
 	if (unlikely (cr == NULL))
 	    return _cairo_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
     }
diff -dupr a/src/cairo-cogl-gradient.c b/src/cairo-cogl-gradient.c
--- a/src/cairo-cogl-gradient.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-cogl-gradient.c	2017-10-10 15:31:44.838748131 -0700
@@ -397,7 +397,7 @@ _cairo_cogl_get_linear_gradient (cairo_c
     }
 
     if (!gradient) {
-	gradient = malloc (sizeof (cairo_cogl_linear_gradient_t) +
+	gradient = _cairo_malloc (sizeof (cairo_cogl_linear_gradient_t) +
 			   sizeof (cairo_gradient_stop_t) * (n_stops - 1));
 	if (!gradient)
 	    return CAIRO_INT_STATUS_NO_MEMORY;
@@ -413,7 +413,7 @@ _cairo_cogl_get_linear_gradient (cairo_c
     } else
 	_cairo_cogl_linear_gradient_reference (gradient);
 
-    entry = malloc (sizeof (cairo_cogl_linear_texture_entry_t));
+    entry = _cairo_malloc (sizeof (cairo_cogl_linear_texture_entry_t));
     if (!entry) {
 	status = CAIRO_INT_STATUS_NO_MEMORY;
 	goto BAIL;
diff -dupr a/src/cairo-cogl-surface.c b/src/cairo-cogl-surface.c
--- a/src/cairo-cogl-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-cogl-surface.c	2017-10-10 15:31:44.838748131 -0700
@@ -1994,7 +1994,7 @@ _cairo_cogl_get_path_stroke_meta (cairo_
     CAIRO_REFERENCE_COUNT_INIT (&meta->ref_count, 1);
     meta->cache_entry.hash = hash;
     meta->counter = 0;
-    meta_path = malloc (sizeof (cairo_path_fixed_t));
+    meta_path = _cairo_malloc (sizeof (cairo_path_fixed_t));
     if (!meta_path)
 	goto BAIL;
     /* FIXME: we should add a ref-counted wrapper for our user_paths
@@ -2248,7 +2248,7 @@ _cairo_cogl_get_path_fill_meta (cairo_co
     meta->cache_entry.hash = hash;
     meta->counter = 0;
     CAIRO_REFERENCE_COUNT_INIT (&meta->ref_count, 1);
-    meta_path = malloc (sizeof (cairo_path_fixed_t));
+    meta_path = _cairo_malloc (sizeof (cairo_path_fixed_t));
     if (!meta_path)
 	goto BAIL;
     /* FIXME: we should add a ref-counted wrapper for our user_paths
@@ -2504,7 +2504,7 @@ _cairo_cogl_surface_create_full (cairo_c
     if (unlikely (status))
 	return _cairo_surface_create_in_error (status);
 
-    surface = malloc (sizeof (cairo_cogl_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_cogl_surface_t));
     if (unlikely (surface == NULL))
         return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-damage.c b/src/cairo-damage.c
--- a/src/cairo-damage.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-damage.c	2017-10-10 15:31:44.838748131 -0700
@@ -51,7 +51,7 @@ _cairo_damage_create (void)
 {
     cairo_damage_t *damage;
 
-    damage = malloc (sizeof (*damage));
+    damage = _cairo_malloc (sizeof (*damage));
     if (unlikely (damage == NULL)) {
 	_cairo_error_throw(CAIRO_STATUS_NO_MEMORY);
 	return (cairo_damage_t *) &__cairo_damage__nil;
@@ -122,7 +122,7 @@ _cairo_damage_add_boxes(cairo_damage_t *
     if (size < count)
 	size = (count + 64) & ~63;
 
-    chunk = malloc (sizeof (*chunk) + sizeof (cairo_box_t) * size);
+    chunk = _cairo_malloc (sizeof (*chunk) + sizeof (cairo_box_t) * size);
     if (unlikely (chunk == NULL)) {
 	_cairo_damage_destroy (damage);
 	return (cairo_damage_t *) &__cairo_damage__nil;
@@ -210,7 +210,7 @@ _cairo_damage_reduce (cairo_damage_t *da
 
     boxes = damage->tail->base;
     if (damage->dirty > damage->tail->size) {
-	boxes = free_boxes = malloc (damage->dirty * sizeof (cairo_box_t));
+	boxes = free_boxes = _cairo_malloc (damage->dirty * sizeof (cairo_box_t));
 	if (unlikely (boxes == NULL)) {
 	    _cairo_damage_destroy (damage);
 	    return (cairo_damage_t *) &__cairo_damage__nil;
diff -dupr a/src/cairo-default-context.c b/src/cairo-default-context.c
--- a/src/cairo-default-context.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-default-context.c	2017-10-10 15:31:44.842747982 -0700
@@ -1460,7 +1460,7 @@ _cairo_default_context_create (void *tar
 
     cr = _freed_pool_get (&context_pool);
     if (unlikely (cr == NULL)) {
-	cr = malloc (sizeof (cairo_default_context_t));
+	cr = _cairo_malloc (sizeof (cairo_default_context_t));
 	if (unlikely (cr == NULL))
 	    return _cairo_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
     }
diff -dupr a/src/cairo-deflate-stream.c b/src/cairo-deflate-stream.c
--- a/src/cairo-deflate-stream.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-deflate-stream.c	2017-10-10 15:31:44.842747982 -0700
@@ -124,7 +124,7 @@ _cairo_deflate_stream_create (cairo_outp
     if (output->status)
 	return _cairo_output_stream_create_in_error (output->status);
 
-    stream = malloc (sizeof (cairo_deflate_stream_t));
+    stream = _cairo_malloc (sizeof (cairo_deflate_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
diff -dupr a/src/cairo-font-face-twin.c b/src/cairo-font-face-twin.c
--- a/src/cairo-font-face-twin.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-font-face-twin.c	2017-10-10 15:31:44.842747982 -0700
@@ -288,7 +288,7 @@ twin_font_face_create_properties (cairo_
 {
     twin_face_properties_t *props;
 
-    props = malloc (sizeof (twin_face_properties_t));
+    props = _cairo_malloc (sizeof (twin_face_properties_t));
     if (unlikely (props == NULL))
 	return NULL;
 
@@ -412,7 +412,7 @@ twin_scaled_font_compute_properties (cai
     cairo_status_t status;
     twin_scaled_properties_t *props;
 
-    props = malloc (sizeof (twin_scaled_properties_t));
+    props = _cairo_malloc (sizeof (twin_scaled_properties_t));
     if (unlikely (props == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-font-options.c b/src/cairo-font-options.c
--- a/src/cairo-font-options.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-font-options.c	2017-10-10 15:31:44.842747982 -0700
@@ -106,7 +106,7 @@ cairo_font_options_create (void)
 {
     cairo_font_options_t *options;
 
-    options = malloc (sizeof (cairo_font_options_t));
+    options = _cairo_malloc (sizeof (cairo_font_options_t));
     if (!options) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_font_options_t *) &_cairo_font_options_nil;
@@ -140,7 +140,7 @@ cairo_font_options_copy (const cairo_fon
     if (cairo_font_options_status ((cairo_font_options_t *) original))
 	return (cairo_font_options_t *) &_cairo_font_options_nil;
 
-    options = malloc (sizeof (cairo_font_options_t));
+    options = _cairo_malloc (sizeof (cairo_font_options_t));
     if (!options) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_font_options_t *) &_cairo_font_options_nil;
diff -dupr a/src/cairo-freelist.c b/src/cairo-freelist.c
--- a/src/cairo-freelist.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-freelist.c	2017-10-10 15:31:44.842747982 -0700
@@ -61,7 +61,7 @@ _cairo_freelist_alloc (cairo_freelist_t
 	return node;
     }
 
-    return malloc (freelist->nodesize);
+    return _cairo_malloc (freelist->nodesize);
 }
 
 void *
@@ -139,7 +139,7 @@ _cairo_freepool_alloc_from_new_pool (cai
 	else
 	    poolsize = (128 * freepool->nodesize + 8191) & -8192;
 
-	pool = malloc (sizeof (cairo_freelist_pool_t) + poolsize);
+	pool = _cairo_malloc (sizeof (cairo_freelist_pool_t) + poolsize);
 	if (unlikely (pool == NULL))
 	    return pool;
 
diff -dupr a/src/cairo-ft-font.c b/src/cairo-ft-font.c
--- a/src/cairo-ft-font.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-ft-font.c	2017-10-10 15:31:44.842747982 -0700
@@ -278,7 +278,7 @@ _cairo_ft_unscaled_font_map_create (void
      * detect some other call path. */
     assert (cairo_ft_unscaled_font_map == NULL);
 
-    font_map = malloc (sizeof (cairo_ft_unscaled_font_map_t));
+    font_map = _cairo_malloc (sizeof (cairo_ft_unscaled_font_map_t));
     if (unlikely (font_map == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -519,7 +519,7 @@ _cairo_ft_unscaled_font_create_internal
     }
 
     /* Otherwise create it and insert into hash table. */
-    unscaled = malloc (sizeof (cairo_ft_unscaled_font_t));
+    unscaled = _cairo_malloc (sizeof (cairo_ft_unscaled_font_t));
     if (unlikely (unscaled == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto UNWIND_FONT_MAP_LOCK;
@@ -1928,7 +1928,7 @@ _cairo_ft_font_face_scaled_font_create (
     if (unlikely (face == NULL)) /* backend error */
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
-    scaled_font = malloc (sizeof (cairo_ft_scaled_font_t));
+    scaled_font = _cairo_malloc (sizeof (cairo_ft_scaled_font_t));
     if (unlikely (scaled_font == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto FAIL;
@@ -2924,7 +2924,7 @@ _cairo_ft_font_face_create_for_pattern (
 {
     cairo_ft_font_face_t *font_face;
 
-    font_face = malloc (sizeof (cairo_ft_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_ft_font_face_t));
     if (unlikely (font_face == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_font_face_t *) &_cairo_font_face_nil;
@@ -2983,7 +2983,7 @@ _cairo_ft_font_face_create (cairo_ft_uns
     }
 
     /* No match found, create a new one */
-    font_face = malloc (sizeof (cairo_ft_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_ft_font_face_t));
     if (unlikely (!font_face)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_font_face_t *)&_cairo_font_face_nil;
diff -dupr a/src/cairo-gl-device.c b/src/cairo-gl-device.c
--- a/src/cairo-gl-device.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gl-device.c	2017-10-10 15:31:44.842747982 -0700
@@ -299,7 +299,7 @@ _cairo_gl_context_init (cairo_gl_context
 
     ctx->vbo_size = _cairo_gl_get_vbo_size();
 
-    ctx->vb = malloc (ctx->vbo_size);
+    ctx->vb = _cairo_malloc (ctx->vbo_size);
     if (unlikely (ctx->vb == NULL)) {
 	    _cairo_cache_fini (&ctx->gradients);
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-gl-gradient.c b/src/cairo-gl-gradient.c
--- a/src/cairo-gl-gradient.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gl-gradient.c	2017-10-10 15:31:44.842747982 -0700
@@ -248,7 +248,7 @@ _cairo_gl_gradient_create (cairo_gl_cont
 	return CAIRO_STATUS_SUCCESS;
     }
 
-    gradient = malloc (sizeof (cairo_gl_gradient_t) + sizeof (cairo_gradient_stop_t) * (n_stops - 1));
+    gradient = _cairo_malloc (sizeof (cairo_gl_gradient_t) + sizeof (cairo_gradient_stop_t) * (n_stops - 1));
     if (gradient == NULL)
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-gl-shaders.c b/src/cairo-gl-shaders.c
--- a/src/cairo-gl-shaders.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gl-shaders.c	2017-10-10 15:31:44.842747982 -0700
@@ -1055,7 +1055,7 @@ _cairo_gl_get_shader_by_type (cairo_gl_c
     if (unlikely (status))
 	return status;
 
-    entry = malloc (sizeof (cairo_shader_cache_entry_t));
+    entry = _cairo_malloc (sizeof (cairo_shader_cache_entry_t));
     if (unlikely (entry == NULL)) {
         free (fs_source);
         return _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-gl-source.c b/src/cairo-gl-source.c
--- a/src/cairo-gl-source.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gl-source.c	2017-10-10 15:31:44.842747982 -0700
@@ -69,7 +69,7 @@ _cairo_gl_pattern_to_source (cairo_surfa
     if (pattern == NULL)
 	return _cairo_gl_white_source ();
 
-    source = malloc (sizeof (*source));
+    source = _cairo_malloc (sizeof (*source));
     if (unlikely (source == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -96,7 +96,7 @@ _cairo_gl_white_source (void)
 {
     cairo_gl_source_t *source;
 
-    source = malloc (sizeof (*source));
+    source = _cairo_malloc (sizeof (*source));
     if (unlikely (source == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-gl-surface.c b/src/cairo-gl-surface.c
--- a/src/cairo-gl-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gl-surface.c	2017-10-10 15:31:44.842747982 -0700
@@ -1181,7 +1181,7 @@ _cairo_gl_surface_map_to_image (void
 	uint8_t *bot = image->data + (image->height-1)*image->stride;
 
 	if (image->stride > (int)sizeof(stack)) {
-	    row = malloc (image->stride);
+	    row = _cairo_malloc (image->stride);
 	    if (unlikely (row == NULL)) {
 		cairo_surface_destroy (&image->base);
 		return _cairo_image_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
diff -dupr a/src/cairo-gstate.c b/src/cairo-gstate.c
--- a/src/cairo-gstate.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-gstate.c	2017-10-10 15:31:44.842747982 -0700
@@ -247,7 +247,7 @@ _cairo_gstate_save (cairo_gstate_t **gst
 
     top = *freelist;
     if (top == NULL) {
-	top = malloc (sizeof (cairo_gstate_t));
+	top = _cairo_malloc (sizeof (cairo_gstate_t));
 	if (unlikely (top == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     } else
diff -dupr a/src/cairo-hash.c b/src/cairo-hash.c
--- a/src/cairo-hash.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-hash.c	2017-10-10 15:31:44.842747982 -0700
@@ -164,7 +164,7 @@ _cairo_hash_table_create (cairo_hash_key
 {
     cairo_hash_table_t *hash_table;
 
-    hash_table = malloc (sizeof (cairo_hash_table_t));
+    hash_table = _cairo_malloc (sizeof (cairo_hash_table_t));
     if (unlikely (hash_table == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return NULL;
diff -dupr a/src/cairo-image-compositor.c b/src/cairo-image-compositor.c
--- a/src/cairo-image-compositor.c	2015-06-24 18:27:05.000000000 -0700
+++ b/src/cairo-image-compositor.c	2017-10-10 15:31:44.842747982 -0700
@@ -2911,7 +2911,7 @@ inplace_renderer_init (cairo_image_span_
 	/* Create an effectively unbounded mask by repeating the single line */
 	buf = r->_buf;
 	if (width > SZ_BUF) {
-	    buf = malloc (width);
+	    buf = _cairo_malloc (width);
 	    if (unlikely (buf == NULL)) {
 		pixman_image_unref (r->src);
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-image-source.c b/src/cairo-image-source.c
--- a/src/cairo-image-source.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-image-source.c	2017-10-10 15:31:44.842747982 -0700
@@ -872,7 +872,7 @@ create_separable_convolution (int *n_val
     size_y = (1 << ysubsample) * ywidth;
 
     *n_values = 4 + size_x + size_y;
-    params = malloc (*n_values * sizeof (pixman_fixed_t));
+    params = _cairo_malloc (*n_values * sizeof (pixman_fixed_t));
     if (!params) return 0;
 
     params[0] = pixman_int_to_fixed (xwidth);
@@ -1077,7 +1077,7 @@ attach_proxy (cairo_surface_t *source,
 {
     struct proxy *proxy;
 
-    proxy = malloc (sizeof (*proxy));
+    proxy = _cairo_malloc (sizeof (*proxy));
     if (unlikely (proxy == NULL))
 	return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1388,7 +1388,7 @@ _pixman_image_for_surface (cairo_image_s
 	    return NULL;
 	}
 
-	cleanup = malloc (sizeof (*cleanup));
+	cleanup = _cairo_malloc (sizeof (*cleanup));
 	if (unlikely (cleanup == NULL)) {
 	    _cairo_surface_release_source_image (pattern->surface, image, extra);
 	    pixman_image_unref (pixman_image);
@@ -1479,7 +1479,7 @@ _pixman_image_for_raster (cairo_image_su
 	return NULL;
     }
 
-    cleanup = malloc (sizeof (*cleanup));
+    cleanup = _cairo_malloc (sizeof (*cleanup));
     if (unlikely (cleanup == NULL)) {
 	pixman_image_unref (pixman_image);
 	_cairo_surface_release_source_image (surface, image, extra);
@@ -1575,7 +1575,7 @@ _cairo_image_source_create_for_pattern (
 
     TRACE ((stderr, "%s\n", __FUNCTION__));
 
-    source = malloc (sizeof (cairo_image_source_t));
+    source = _cairo_malloc (sizeof (cairo_image_source_t));
     if (unlikely (source == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-image-surface.c b/src/cairo-image-surface.c
--- a/src/cairo-image-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-image-surface.c	2017-10-10 15:31:44.842747982 -0700
@@ -181,7 +181,7 @@ _cairo_image_surface_create_for_pixman_i
 {
     cairo_image_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_image_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_image_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-lzw.c b/src/cairo-lzw.c
--- a/src/cairo-lzw.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-lzw.c	2017-10-10 15:31:44.842747982 -0700
@@ -73,7 +73,7 @@ _lzw_buf_init (lzw_buf_t *buf, int size)
     buf->pending = 0;
     buf->pending_bits = 0;
 
-    buf->data = malloc (size);
+    buf->data = _cairo_malloc (size);
     if (unlikely (buf->data == NULL)) {
 	buf->data_size = 0;
 	buf->status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-mempool.c b/src/cairo-mempool.c
--- a/src/cairo-mempool.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-mempool.c	2017-10-10 15:31:44.842747982 -0700
@@ -316,7 +316,7 @@ _cairo_mempool_init (cairo_mempool_t *po
     for (i = 0; i < ARRAY_LENGTH (pool->free); i++)
 	cairo_list_init (&pool->free[i]);
 
-    pool->map = malloc ((num_blocks + 7) >> 3);
+    pool->map = _cairo_malloc ((num_blocks + 7) >> 3);
     if (pool->map == NULL) {
 	free (pool->blocks);
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-misc.c b/src/cairo-misc.c
--- a/src/cairo-misc.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-misc.c	2017-10-10 15:31:44.842747982 -0700
@@ -906,7 +906,7 @@ _cairo_intern_string (const char **str_i
     istring = _cairo_hash_table_lookup (_cairo_intern_string_ht,
 					&tmpl.hash_entry);
     if (istring == NULL) {
-	istring = malloc (sizeof (cairo_intern_string_t) + len + 1);
+	istring = _cairo_malloc (sizeof (cairo_intern_string_t) + len + 1);
 	if (likely (istring != NULL)) {
 	    istring->hash_entry.hash = tmpl.hash_entry.hash;
 	    istring->len = tmpl.len;
diff -dupr a/src/cairo-mono-scan-converter.c b/src/cairo-mono-scan-converter.c
--- a/src/cairo-mono-scan-converter.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-mono-scan-converter.c	2017-10-10 15:31:44.842747982 -0700
@@ -587,7 +587,7 @@ _cairo_mono_scan_converter_create (int
     cairo_mono_scan_converter_t *self;
     cairo_status_t status;
 
-    self = malloc (sizeof(struct _cairo_mono_scan_converter));
+    self = _cairo_malloc (sizeof(struct _cairo_mono_scan_converter));
     if (unlikely (self == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto bail_nomem;
diff -dupr a/src/cairo-os2-surface.c b/src/cairo-os2-surface.c
--- a/src/cairo-os2-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-os2-surface.c	2017-10-10 15:31:44.846747833 -0700
@@ -198,7 +198,7 @@ void *_buffer_alloc (size_t a, size_t b,
         return NULL;
 #else
     /* Clear the malloc'd buffer the way DosAllocMem() does. */
-    buffer = malloc (nbytes);
+    buffer = _cairo_malloc (nbytes);
     if (buffer) {
         memset (buffer, 0, nbytes);
     }
@@ -718,7 +718,7 @@ cairo_os2_surface_create (HPS hps_client
     }
 
     /* Allocate an OS/2 surface structure. */
-    local_os2_surface = (cairo_os2_surface_t *) malloc (sizeof (cairo_os2_surface_t));
+    local_os2_surface = (cairo_os2_surface_t *) _cairo_malloc (sizeof (cairo_os2_surface_t));
     if (!local_os2_surface) {
         status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
         goto error_exit;
diff -dupr a/src/cairo-output-stream.c b/src/cairo-output-stream.c
--- a/src/cairo-output-stream.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/cairo-output-stream.c	2017-10-10 15:31:44.846747833 -0700
@@ -147,7 +147,7 @@ _cairo_output_stream_create (cairo_write
 {
     cairo_output_stream_with_closure_t *stream;
 
-    stream = malloc (sizeof (cairo_output_stream_with_closure_t));
+    stream = _cairo_malloc (sizeof (cairo_output_stream_with_closure_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -173,7 +173,7 @@ _cairo_output_stream_create_in_error (ca
     if (status == CAIRO_STATUS_WRITE_ERROR)
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil_write_error;
 
-    stream = malloc (sizeof (cairo_output_stream_t));
+    stream = _cairo_malloc (sizeof (cairo_output_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -635,7 +635,7 @@ _cairo_output_stream_create_for_file (FI
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil_write_error;
     }
 
-    stream = malloc (sizeof *stream);
+    stream = _cairo_malloc (sizeof *stream);
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -669,7 +669,7 @@ _cairo_output_stream_create_for_filename
 	}
     }
 
-    stream = malloc (sizeof *stream);
+    stream = _cairo_malloc (sizeof *stream);
     if (unlikely (stream == NULL)) {
 	fclose (file);
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
@@ -713,7 +713,7 @@ _cairo_memory_stream_create (void)
 {
     memory_stream_t *stream;
 
-    stream = malloc (sizeof *stream);
+    stream = _cairo_malloc (sizeof *stream);
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -740,7 +740,7 @@ _cairo_memory_stream_destroy (cairo_outp
     stream = (memory_stream_t *) abstract_stream;
 
     *length_out = _cairo_array_num_elements (&stream->array);
-    *data_out = malloc (*length_out);
+    *data_out = _cairo_malloc (*length_out);
     if (unlikely (*data_out == NULL)) {
 	status = _cairo_output_stream_destroy (abstract_stream);
 	assert (status == CAIRO_STATUS_SUCCESS);
@@ -790,7 +790,7 @@ _cairo_null_stream_create (void)
 {
     cairo_output_stream_t *stream;
 
-    stream = malloc (sizeof *stream);
+    stream = _cairo_malloc (sizeof *stream);
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
diff -dupr a/src/cairo-paginated-surface.c b/src/cairo-paginated-surface.c
--- a/src/cairo-paginated-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-paginated-surface.c	2017-10-10 15:31:44.846747833 -0700
@@ -98,7 +98,7 @@ _cairo_paginated_surface_create (cairo_s
     cairo_paginated_surface_t *surface;
     cairo_status_t status;
 
-    surface = malloc (sizeof (cairo_paginated_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_paginated_surface_t));
     if (unlikely (surface == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto FAIL;
diff -dupr a/src/cairo-path.c b/src/cairo-path.c
--- a/src/cairo-path.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-path.c	2017-10-10 15:31:44.846747833 -0700
@@ -294,7 +294,7 @@ _cairo_path_create_in_error (cairo_statu
     if (status == CAIRO_STATUS_NO_MEMORY)
 	return (cairo_path_t*) &_cairo_path_nil;
 
-    path = malloc (sizeof (cairo_path_t));
+    path = _cairo_malloc (sizeof (cairo_path_t));
     if (unlikely (path == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_path_t*) &_cairo_path_nil;
@@ -314,7 +314,7 @@ _cairo_path_create_internal (cairo_path_
 {
     cairo_path_t *path;
 
-    path = malloc (sizeof (cairo_path_t));
+    path = _cairo_malloc (sizeof (cairo_path_t));
     if (unlikely (path == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_path_t*) &_cairo_path_nil;
diff -dupr a/src/cairo-path-fixed.c b/src/cairo-path-fixed.c
--- a/src/cairo-path-fixed.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-path-fixed.c	2017-10-10 15:31:44.846747833 -0700
@@ -325,7 +325,7 @@ _cairo_path_fixed_create (void)
 {
     cairo_path_fixed_t	*path;
 
-    path = malloc (sizeof (cairo_path_fixed_t));
+    path = _cairo_malloc (sizeof (cairo_path_fixed_t));
     if (!path) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return NULL;
diff -dupr a/src/cairo-pattern.c b/src/cairo-pattern.c
--- a/src/cairo-pattern.c	2016-12-07 19:23:15.000000000 -0800
+++ b/src/cairo-pattern.c	2017-10-10 15:31:44.846747833 -0700
@@ -496,22 +496,22 @@ _cairo_pattern_create_copy (cairo_patter
 
     switch (other->type) {
     case CAIRO_PATTERN_TYPE_SOLID:
-	pattern = malloc (sizeof (cairo_solid_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_solid_pattern_t));
 	break;
     case CAIRO_PATTERN_TYPE_SURFACE:
-	pattern = malloc (sizeof (cairo_surface_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_surface_pattern_t));
 	break;
     case CAIRO_PATTERN_TYPE_LINEAR:
-	pattern = malloc (sizeof (cairo_linear_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_linear_pattern_t));
 	break;
     case CAIRO_PATTERN_TYPE_RADIAL:
-	pattern = malloc (sizeof (cairo_radial_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_radial_pattern_t));
 	break;
     case CAIRO_PATTERN_TYPE_MESH:
-	pattern = malloc (sizeof (cairo_mesh_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_mesh_pattern_t));
 	break;
     case CAIRO_PATTERN_TYPE_RASTER_SOURCE:
-	pattern = malloc (sizeof (cairo_raster_source_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_raster_source_pattern_t));
 	break;
     default:
 	ASSERT_NOT_REACHED;
@@ -602,7 +602,7 @@ _cairo_pattern_create_solid (const cairo
 	_freed_pool_get (&freed_pattern_pool[CAIRO_PATTERN_TYPE_SOLID]);
     if (unlikely (pattern == NULL)) {
 	/* None cached, need to create a new pattern. */
-	pattern = malloc (sizeof (cairo_solid_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_solid_pattern_t));
 	if (unlikely (pattern == NULL)) {
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	    return (cairo_pattern_t *) &_cairo_pattern_nil;
@@ -736,7 +736,7 @@ cairo_pattern_create_for_surface (cairo_
     pattern =
 	_freed_pool_get (&freed_pattern_pool[CAIRO_PATTERN_TYPE_SURFACE]);
     if (unlikely (pattern == NULL)) {
-	pattern = malloc (sizeof (cairo_surface_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_surface_pattern_t));
 	if (unlikely (pattern == NULL)) {
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	    return (cairo_pattern_t *)&_cairo_pattern_nil.base;
@@ -788,7 +788,7 @@ cairo_pattern_create_linear (double x0,
     pattern =
 	_freed_pool_get (&freed_pattern_pool[CAIRO_PATTERN_TYPE_LINEAR]);
     if (unlikely (pattern == NULL)) {
-	pattern = malloc (sizeof (cairo_linear_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_linear_pattern_t));
 	if (unlikely (pattern == NULL)) {
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	    return (cairo_pattern_t *) &_cairo_pattern_nil.base;
@@ -842,7 +842,7 @@ cairo_pattern_create_radial (double cx0,
     pattern =
 	_freed_pool_get (&freed_pattern_pool[CAIRO_PATTERN_TYPE_RADIAL]);
     if (unlikely (pattern == NULL)) {
-	pattern = malloc (sizeof (cairo_radial_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_radial_pattern_t));
 	if (unlikely (pattern == NULL)) {
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	    return (cairo_pattern_t *) &_cairo_pattern_nil.base;
@@ -1020,7 +1020,7 @@ cairo_pattern_create_mesh (void)
     pattern =
 	_freed_pool_get (&freed_pattern_pool[CAIRO_PATTERN_TYPE_MESH]);
     if (unlikely (pattern == NULL)) {
-	pattern = malloc (sizeof (cairo_mesh_pattern_t));
+	pattern = _cairo_malloc (sizeof (cairo_mesh_pattern_t));
 	if (unlikely (pattern == NULL)) {
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	    return (cairo_pattern_t *) &_cairo_pattern_nil.base;
@@ -4417,7 +4417,7 @@ cairo_mesh_pattern_get_path (cairo_patte
 
     patch = _cairo_array_index_const (&mesh->patches, patch_num);
 
-    path = malloc (sizeof (cairo_path_t));
+    path = _cairo_malloc (sizeof (cairo_path_t));
     if (path == NULL)
 	return _cairo_path_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-pdf-operators.c b/src/cairo-pdf-operators.c
--- a/src/cairo-pdf-operators.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-pdf-operators.c	2017-10-10 15:31:44.846747833 -0700
@@ -358,7 +358,7 @@ _word_wrap_stream_create (cairo_output_s
     if (output->status)
 	return _cairo_output_stream_create_in_error (output->status);
 
-    stream = malloc (sizeof (word_wrap_stream_t));
+    stream = _cairo_malloc (sizeof (word_wrap_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
diff -dupr a/src/cairo-pdf-shading.c b/src/cairo-pdf-shading.c
--- a/src/cairo-pdf-shading.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-pdf-shading.c	2017-10-10 15:31:44.846747833 -0700
@@ -170,7 +170,7 @@ _cairo_pdf_shading_generate_data (cairo_
      * 4 colors. Each color is stored in 2 bytes * num_color_components.
      */
     shading->data_length = num_patches * (1 + 16 * 2 * 4 + 4 * 2 * num_color_components);
-    shading->data = malloc (shading->data_length);
+    shading->data = _cairo_malloc (shading->data_length);
     if (unlikely (shading->data == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-pdf-surface.c b/src/cairo-pdf-surface.c
--- a/src/cairo-pdf-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-pdf-surface.c	2017-10-10 15:31:44.850747685 -0700
@@ -357,7 +357,7 @@ _cairo_pdf_surface_create_for_stream_int
     cairo_pdf_surface_t *surface;
     cairo_status_t status, status_ignored;
 
-    surface = malloc (sizeof (cairo_pdf_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_pdf_surface_t));
     if (unlikely (surface == NULL)) {
 	/* destroy stream on behalf of caller */
 	status = _cairo_output_stream_destroy (output);
@@ -1450,7 +1450,7 @@ release_source:
     if (status || surface_entry)
 	return status;
 
-    surface_entry = malloc (sizeof (cairo_pdf_source_surface_entry_t));
+    surface_entry = _cairo_malloc (sizeof (cairo_pdf_source_surface_entry_t));
     if (surface_entry == NULL) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto fail1;
@@ -2642,7 +2642,7 @@ _cairo_pdf_surface_lookup_jbig2_global (
 	}
     }
 
-    global.id = malloc(global_id_length);
+    global.id = _cairo_malloc (global_id_length);
     if (unlikely (global.id == NULL)) {
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
@@ -4711,7 +4711,7 @@ _utf8_to_pdf_string (const char *utf8, c
     }
 
     if (ascii) {
-	str = malloc (len + 3);
+	str = _cairo_malloc (len + 3);
 	if (str == NULL)
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -4728,7 +4728,7 @@ _utf8_to_pdf_string (const char *utf8, c
 	if (unlikely (status))
 	    return status;
 
-	str = malloc (utf16_len*4 + 7);
+	str = _cairo_malloc (utf16_len*4 + 7);
 	if (str == NULL) {
 	    free (utf16);
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
@@ -7726,7 +7726,7 @@ _cairo_pdf_surface_show_text_glyphs (voi
 	group->source_res = pattern_res;
 
 	if (utf8_len) {
-	    group->utf8 = malloc (utf8_len);
+	    group->utf8 = _cairo_malloc (utf8_len);
 	    if (unlikely (group->utf8 == NULL)) {
 		_cairo_pdf_smask_group_destroy (group);
 		status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-ps-surface.c b/src/cairo-ps-surface.c
--- a/src/cairo-ps-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-ps-surface.c	2017-10-10 15:31:44.850747685 -0700
@@ -972,7 +972,7 @@ _cairo_ps_surface_get_page_media (cairo_
 	}
     }
 
-    page = malloc (sizeof (cairo_page_media_t));
+    page = _cairo_malloc (sizeof (cairo_page_media_t));
     if (unlikely (page == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return NULL;
@@ -1008,7 +1008,7 @@ _cairo_ps_surface_create_for_stream_inte
     cairo_status_t status, status_ignored;
     cairo_ps_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_ps_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_ps_surface_t));
     if (unlikely (surface == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP;
@@ -2266,7 +2266,7 @@ _string_array_stream_create (cairo_outpu
 {
     string_array_stream_t *stream;
 
-    stream = malloc (sizeof (string_array_stream_t));
+    stream = _cairo_malloc (sizeof (string_array_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -2293,7 +2293,7 @@ _base85_array_stream_create (cairo_outpu
 {
     string_array_stream_t *stream;
 
-    stream = malloc (sizeof (string_array_stream_t));
+    stream = _cairo_malloc (sizeof (string_array_stream_t));
     if (unlikely (stream == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_output_stream_t *) &_cairo_output_stream_nil;
@@ -2547,7 +2547,7 @@ _cairo_ps_surface_emit_image (cairo_ps_s
     if (use_mask)
 	data_size += (ps_image->width + 7)/8;
     data_size *= ps_image->height;
-    data = malloc (data_size);
+    data = _cairo_malloc (data_size);
     if (unlikely (data == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto bail1;
diff -dupr a/src/cairo-qt-surface.cpp b/src/cairo-qt-surface.cpp
--- a/src/cairo-qt-surface.cpp	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-qt-surface.cpp	2017-10-10 15:31:44.850747685 -0700
@@ -631,7 +631,7 @@ map_qimage_to_image (QImage *qimg, const
 	return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
     }
 
-    surface = (struct _qimage_surface *) malloc (sizeof(*surface));
+    surface = (struct _qimage_surface *) _cairo_malloc (sizeof(*surface));
     if (unlikely (surface == NULL)) {
 	pixman_image_unref (pixman_image);
 	delete qimg;
@@ -1530,7 +1530,7 @@ cairo_qt_surface_create (QPainter *paint
 {
     cairo_qt_surface_t *qs;
 
-    qs = (cairo_qt_surface_t *) malloc (sizeof(cairo_qt_surface_t));
+    qs = (cairo_qt_surface_t *) _cairo_malloc (sizeof(cairo_qt_surface_t));
     if (qs == NULL)
         return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1569,7 +1569,7 @@ cairo_qt_surface_create_with_qimage (cai
 {
     cairo_qt_surface_t *qs;
 
-    qs = (cairo_qt_surface_t *) malloc (sizeof(cairo_qt_surface_t));
+    qs = (cairo_qt_surface_t *) _cairo_malloc (sizeof(cairo_qt_surface_t));
     if (qs == NULL)
         return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1618,7 +1618,7 @@ cairo_qt_surface_create_with_qpixmap (ca
     if ((content & CAIRO_CONTENT_COLOR) == 0)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_CONTENT));
 
-    qs = (cairo_qt_surface_t *) malloc (sizeof(cairo_qt_surface_t));
+    qs = (cairo_qt_surface_t *) _cairo_malloc (sizeof(cairo_qt_surface_t));
     if (qs == NULL)
         return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-quartz-font.c b/src/cairo-quartz-font.c
--- a/src/cairo-quartz-font.c	2015-06-24 19:13:32.000000000 -0700
+++ b/src/cairo-quartz-font.c	2017-10-10 15:31:44.850747685 -0700
@@ -178,7 +178,7 @@ _cairo_quartz_font_face_create_for_toy (
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
     family = toy_face->family;
-    full_name = malloc (strlen (family) + 64); // give us a bit of room to tack on Bold, Oblique, etc.
+    full_name = _cairo_malloc (strlen (family) + 64); // give us a bit of room to tack on Bold, Oblique, etc.
     /* handle CSS-ish faces */
     if (!strcmp(family, "serif") || !strcmp(family, "Times Roman"))
 	family = "Times";
@@ -265,7 +265,7 @@ _cairo_quartz_font_face_scaled_font_crea
     if (!_cairo_quartz_font_symbols_present)
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
-    font = malloc(sizeof(cairo_quartz_scaled_font_t));
+    font = _cairo_malloc (sizeof(cairo_quartz_scaled_font_t));
     if (font == NULL)
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -357,7 +357,7 @@ cairo_quartz_font_face_create_for_cgfont
 
     quartz_font_ensure_symbols();
 
-    font_face = malloc (sizeof (cairo_quartz_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_quartz_font_face_t));
     if (!font_face) {
 	cairo_status_t ignore_status;
 	ignore_status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-quartz-image-surface.c b/src/cairo-quartz-image-surface.c
--- a/src/cairo-quartz-image-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-quartz-image-surface.c	2017-10-10 15:31:44.850747685 -0700
@@ -332,7 +332,7 @@ cairo_quartz_image_surface_create (cairo
     if (format != CAIRO_FORMAT_ARGB32 && format != CAIRO_FORMAT_RGB24)
 	return SURFACE_ERROR_INVALID_FORMAT;
 
-    qisurf = malloc(sizeof(cairo_quartz_image_surface_t));
+    qisurf = _cairo_malloc (sizeof(cairo_quartz_image_surface_t));
     if (qisurf == NULL)
 	return SURFACE_ERROR_NO_MEMORY;
 
diff -dupr a/src/cairo-quartz-surface.c b/src/cairo-quartz-surface.c
--- a/src/cairo-quartz-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-quartz-surface.c	2017-10-10 15:31:44.850747685 -0700
@@ -811,7 +811,7 @@ _cairo_surface_to_cgimage (cairo_surface
 	}
     }
 
-    source_img = malloc (sizeof (quartz_source_image_t));
+    source_img = _cairo_malloc (sizeof (quartz_source_image_t));
     if (unlikely (source_img == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -969,7 +969,7 @@ _cairo_quartz_cairo_repeating_surface_pa
     if (unlikely (status))
 	return status;
 
-    info = malloc (sizeof (SurfacePatternDrawInfo));
+    info = _cairo_malloc (sizeof (SurfacePatternDrawInfo));
     if (unlikely (!info))
 	return CAIRO_STATUS_NO_MEMORY;
 
@@ -2238,7 +2238,7 @@ _cairo_quartz_surface_create_internal (C
     quartz_ensure_symbols ();
 
     /* Init the base surface */
-    surface = malloc (sizeof (cairo_quartz_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_quartz_surface_t));
     if (unlikely (surface == NULL))
 	return (cairo_quartz_surface_t*) _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-recording-surface.c b/src/cairo-recording-surface.c
--- a/src/cairo-recording-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-recording-surface.c	2017-10-10 15:31:44.850747685 -0700
@@ -158,7 +158,7 @@ static int bbtree_left_or_right (struct
 static struct bbtree *
 bbtree_new (const cairo_box_t *box, cairo_command_header_t *chain)
 {
-    struct bbtree *bbt = malloc (sizeof (*bbt));
+    struct bbtree *bbt = _cairo_malloc (sizeof (*bbt));
     if (bbt == NULL)
 	return NULL;
     bbt->extents = *box;
@@ -386,7 +386,7 @@ cairo_recording_surface_create (cairo_co
 {
     cairo_recording_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_recording_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_recording_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -552,7 +552,7 @@ attach_proxy (cairo_surface_t *source,
 {
     struct proxy *proxy;
 
-    proxy = malloc (sizeof (*proxy));
+    proxy = _cairo_malloc (sizeof (*proxy));
     if (unlikely (proxy == NULL))
 	return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -737,7 +737,7 @@ _cairo_recording_surface_paint (void
     if (unlikely (status))
 	return status;
 
-    command = malloc (sizeof (cairo_command_paint_t));
+    command = _cairo_malloc (sizeof (cairo_command_paint_t));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_COMPOSITE;
@@ -793,7 +793,7 @@ _cairo_recording_surface_mask (void			*a
     if (unlikely (status))
 	return status;
 
-    command = malloc (sizeof (cairo_command_mask_t));
+    command = _cairo_malloc (sizeof (cairo_command_mask_t));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_COMPOSITE;
@@ -861,7 +861,7 @@ _cairo_recording_surface_stroke (void
     if (unlikely (status))
 	return status;
 
-    command = malloc (sizeof (cairo_command_stroke_t));
+    command = _cairo_malloc (sizeof (cairo_command_stroke_t));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_COMPOSITE;
@@ -937,7 +937,7 @@ _cairo_recording_surface_fill (void			*a
     if (unlikely (status))
 	return status;
 
-    command = malloc (sizeof (cairo_command_fill_t));
+    command = _cairo_malloc (sizeof (cairo_command_fill_t));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_COMPOSITE;
@@ -1019,7 +1019,7 @@ _cairo_recording_surface_show_text_glyph
     if (unlikely (status))
 	return status;
 
-    command = malloc (sizeof (cairo_command_show_text_glyphs_t));
+    command = _cairo_malloc (sizeof (cairo_command_show_text_glyphs_t));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_COMPOSITE;
@@ -1043,7 +1043,7 @@ _cairo_recording_surface_show_text_glyph
     command->num_clusters = num_clusters;
 
     if (utf8_len) {
-	command->utf8 = malloc (utf8_len);
+	command->utf8 = _cairo_malloc (utf8_len);
 	if (unlikely (command->utf8 == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto CLEANUP_ARRAYS;
@@ -1117,7 +1117,7 @@ _cairo_recording_surface_copy__paint (ca
     cairo_command_paint_t *command;
     cairo_status_t status;
 
-    command = malloc (sizeof (*command));
+    command = _cairo_malloc (sizeof (*command));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto err;
@@ -1151,7 +1151,7 @@ _cairo_recording_surface_copy__mask (cai
     cairo_command_mask_t *command;
     cairo_status_t status;
 
-    command = malloc (sizeof (*command));
+    command = _cairo_malloc (sizeof (*command));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto err;
@@ -1192,7 +1192,7 @@ _cairo_recording_surface_copy__stroke (c
     cairo_command_stroke_t *command;
     cairo_status_t status;
 
-    command = malloc (sizeof (*command));
+    command = _cairo_malloc (sizeof (*command));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto err;
@@ -1244,7 +1244,7 @@ _cairo_recording_surface_copy__fill (cai
     cairo_command_fill_t *command;
     cairo_status_t status;
 
-    command = malloc (sizeof (*command));
+    command = _cairo_malloc (sizeof (*command));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto err;
@@ -1288,7 +1288,7 @@ _cairo_recording_surface_copy__glyphs (c
     cairo_command_show_text_glyphs_t *command;
     cairo_status_t status;
 
-    command = malloc (sizeof (*command));
+    command = _cairo_malloc (sizeof (*command));
     if (unlikely (command == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto err;
@@ -1309,7 +1309,7 @@ _cairo_recording_surface_copy__glyphs (c
     command->num_clusters = src->show_text_glyphs.num_clusters;
 
     if (command->utf8_len) {
-	command->utf8 = malloc (command->utf8_len);
+	command->utf8 = _cairo_malloc (command->utf8_len);
 	if (unlikely (command->utf8 == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto err_arrays;
@@ -1424,7 +1424,7 @@ _cairo_recording_surface_snapshot (void
     cairo_recording_surface_t *surface;
     cairo_status_t status;
 
-    surface = malloc (sizeof (cairo_recording_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_recording_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-scaled-font.c b/src/cairo-scaled-font.c
--- a/src/cairo-scaled-font.c	2016-12-07 19:23:15.000000000 -0800
+++ b/src/cairo-scaled-font.c	2017-10-10 15:31:44.850747685 -0700
@@ -371,7 +371,7 @@ _cairo_scaled_font_map_lock (void)
     CAIRO_MUTEX_LOCK (_cairo_scaled_font_map_mutex);
 
     if (cairo_scaled_font_map == NULL) {
-	cairo_scaled_font_map = malloc (sizeof (cairo_scaled_font_map_t));
+	cairo_scaled_font_map = _cairo_malloc (sizeof (cairo_scaled_font_map_t));
 	if (unlikely (cairo_scaled_font_map == NULL))
 	    goto CLEANUP_MUTEX_LOCK;
 
@@ -512,7 +512,7 @@ _cairo_scaled_font_register_placeholder_
     if (unlikely (status))
 	return status;
 
-    placeholder_scaled_font = malloc (sizeof (cairo_scaled_font_t));
+    placeholder_scaled_font = _cairo_malloc (sizeof (cairo_scaled_font_t));
     if (unlikely (placeholder_scaled_font == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1229,7 +1229,7 @@ _cairo_scaled_font_create_in_error (cair
     CAIRO_MUTEX_LOCK (_cairo_scaled_font_error_mutex);
     scaled_font = _cairo_scaled_font_nil_objects[status];
     if (unlikely (scaled_font == NULL)) {
-	scaled_font = malloc (sizeof (cairo_scaled_font_t));
+	scaled_font = _cairo_malloc (sizeof (cairo_scaled_font_t));
 	if (unlikely (scaled_font == NULL)) {
 	    CAIRO_MUTEX_UNLOCK (_cairo_scaled_font_error_mutex);
 	    _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
@@ -2860,7 +2860,7 @@ _cairo_scaled_font_allocate_glyph (cairo
         }
     }
 
-    page = malloc (sizeof (cairo_scaled_glyph_page_t));
+    page = _cairo_malloc (sizeof (cairo_scaled_glyph_page_t));
     if (unlikely (page == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-scaled-font-subsets.c b/src/cairo-scaled-font-subsets.c
--- a/src/cairo-scaled-font-subsets.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-scaled-font-subsets.c	2017-10-10 15:31:44.850747685 -0700
@@ -166,7 +166,7 @@ _cairo_sub_font_glyph_create (unsigned l
 {
     cairo_sub_font_glyph_t *sub_font_glyph;
 
-    sub_font_glyph = malloc (sizeof (cairo_sub_font_glyph_t));
+    sub_font_glyph = _cairo_malloc (sizeof (cairo_sub_font_glyph_t));
     if (unlikely (sub_font_glyph == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return NULL;
@@ -276,7 +276,7 @@ _cairo_sub_font_create (cairo_scaled_fon
     cairo_sub_font_t *sub_font;
     int i;
 
-    sub_font = malloc (sizeof (cairo_sub_font_t));
+    sub_font = _cairo_malloc (sizeof (cairo_sub_font_t));
     if (unlikely (sub_font == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -402,7 +402,7 @@ _cairo_sub_font_glyph_lookup_unicode (ca
     if (unicode != (uint32_t) -1) {
 	len = _cairo_ucs4_to_utf8 (unicode, buf);
 	if (len > 0) {
-	    *utf8_out = malloc (len + 1);
+	    *utf8_out = _cairo_malloc (len + 1);
 	    if (unlikely (*utf8_out == NULL))
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -439,7 +439,7 @@ _cairo_sub_font_glyph_map_to_unicode (ca
 	    }
 	} else {
 	    /* No existing mapping. Use the requested mapping */
-	    sub_font_glyph->utf8 = malloc (utf8_len + 1);
+	    sub_font_glyph->utf8 = _cairo_malloc (utf8_len + 1);
 	    if (unlikely (sub_font_glyph->utf8 == NULL))
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -624,7 +624,7 @@ _cairo_sub_font_map_glyph (cairo_sub_fon
 		if (ucs4_len == 1) {
 		    font_unicode = ucs4[0];
 		    free (font_utf8);
-		    font_utf8 = malloc (text_utf8_len + 1);
+		    font_utf8 = _cairo_malloc (text_utf8_len + 1);
 		    if (font_utf8 == NULL) {
 			free (ucs4);
 			return _cairo_error (CAIRO_STATUS_NO_MEMORY);
@@ -762,7 +762,7 @@ _cairo_scaled_font_subsets_create_intern
 {
     cairo_scaled_font_subsets_t *subsets;
 
-    subsets = malloc (sizeof (cairo_scaled_font_subsets_t));
+    subsets = _cairo_malloc (sizeof (cairo_scaled_font_subsets_t));
     if (unlikely (subsets == NULL)) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return NULL;
@@ -1136,7 +1136,7 @@ _cairo_string_init_key (cairo_string_ent
 static cairo_status_t
 create_string_entry (char *s, cairo_string_entry_t **entry)
 {
-    *entry = malloc (sizeof (cairo_string_entry_t));
+    *entry = _cairo_malloc (sizeof (cairo_string_entry_t));
     if (unlikely (*entry == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-script-surface.c b/src/cairo-script-surface.c
--- a/src/cairo-script-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-script-surface.c	2017-10-10 15:31:44.854747536 -0700
@@ -263,7 +263,7 @@ _bitmap_next_id (struct _bitmap *b,
 	b = b->next;
     } while (b != NULL);
 
-    bb = malloc (sizeof (struct _bitmap));
+    bb = _cairo_malloc (sizeof (struct _bitmap));
     if (unlikely (bb == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1104,7 +1104,7 @@ attach_snapshot (cairo_script_context_t
     if (! ctx->attach_snapshots)
 	return;
 
-    surface = malloc (sizeof (*surface));
+    surface = _cairo_malloc (sizeof (*surface));
     if (unlikely (surface == NULL))
 	return;
 
@@ -1253,7 +1253,7 @@ _write_image_surface (cairo_output_strea
     }
 #else
     if (stride > ARRAY_LENGTH (row_stack)) {
-	rowdata = malloc (stride);
+	rowdata = _cairo_malloc (stride);
 	if (unlikely (rowdata == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     } else
@@ -2176,7 +2176,7 @@ _cairo_script_surface_finish (void *abst
 		}
 		cairo_list_del (&surface->operand.link);
 	    } else {
-		struct deferred_finish *link = malloc (sizeof (*link));
+		struct deferred_finish *link = _cairo_malloc (sizeof (*link));
 		if (link == NULL) {
 		    status2 = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 		    if (status == CAIRO_STATUS_SUCCESS)
@@ -2855,7 +2855,7 @@ _emit_type42_font (cairo_script_surface_
     if (unlikely (status))
 	return status;
 
-    buf = malloc (size);
+    buf = _cairo_malloc (size);
     if (unlikely (buf == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -2911,7 +2911,7 @@ _emit_scaled_font_init (cairo_script_sur
     cairo_script_font_t *font_private;
     cairo_int_status_t status;
 
-    font_private = malloc (sizeof (cairo_script_font_t));
+    font_private = _cairo_malloc (sizeof (cairo_script_font_t));
     if (unlikely (font_private == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -3641,7 +3641,7 @@ _cairo_script_surface_create_internal (c
     if (unlikely (ctx == NULL))
 	return (cairo_script_surface_t *) _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NULL_POINTER));
 
-    surface = malloc (sizeof (cairo_script_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_script_surface_t));
     if (unlikely (surface == NULL))
 	return (cairo_script_surface_t *) _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -3689,7 +3689,7 @@ _cairo_script_context_create_internal (c
 {
     cairo_script_context_t *ctx;
 
-    ctx = malloc (sizeof (cairo_script_context_t));
+    ctx = _cairo_malloc (sizeof (cairo_script_context_t));
     if (unlikely (ctx == NULL))
 	return _cairo_device_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-surface.c b/src/cairo-surface.c
--- a/src/cairo-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-surface.c	2017-10-10 15:31:44.854747536 -0700
@@ -1361,7 +1361,7 @@ cairo_surface_set_mime_data (cairo_surfa
 	return _cairo_surface_set_error (surface, status);
 
     if (data != NULL) {
-	mime_data = malloc (sizeof (cairo_mime_data_t));
+	mime_data = _cairo_malloc (sizeof (cairo_mime_data_t));
 	if (unlikely (mime_data == NULL))
 	    return _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-surface-observer.c b/src/cairo-surface-observer.c
--- a/src/cairo-surface-observer.c	2016-12-07 19:23:15.000000000 -0800
+++ b/src/cairo-surface-observer.c	2017-10-10 15:31:44.854747536 -0700
@@ -348,7 +348,7 @@ _cairo_device_create_observer_internal (
     cairo_device_observer_t *device;
     cairo_status_t status;
 
-    device = malloc (sizeof (cairo_device_observer_t));
+    device = _cairo_malloc (sizeof (cairo_device_observer_t));
     if (unlikely (device == NULL))
 	return _cairo_device_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -379,7 +379,7 @@ _cairo_surface_create_observer_internal
     cairo_surface_observer_t *surface;
     cairo_status_t status;
 
-    surface = malloc (sizeof (cairo_surface_observer_t));
+    surface = _cairo_malloc (sizeof (cairo_surface_observer_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1417,7 +1417,7 @@ _cairo_surface_observer_add_callback (ca
 {
     struct callback_list *cb;
 
-    cb = malloc (sizeof (*cb));
+    cb = _cairo_malloc (sizeof (*cb));
     if (unlikely (cb == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-surface-snapshot.c b/src/cairo-surface-snapshot.c
--- a/src/cairo-surface-snapshot.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-surface-snapshot.c	2017-10-10 15:31:44.854747536 -0700
@@ -99,7 +99,7 @@ _cairo_surface_snapshot_acquire_source_i
     struct snapshot_extra *extra;
     cairo_status_t status;
 
-    extra = malloc (sizeof (*extra));
+    extra = _cairo_malloc (sizeof (*extra));
     if (unlikely (extra == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -258,7 +258,7 @@ _cairo_surface_snapshot (cairo_surface_t
     if (snapshot != NULL)
 	return cairo_surface_reference (&snapshot->base);
 
-    snapshot = malloc (sizeof (cairo_surface_snapshot_t));
+    snapshot = _cairo_malloc (sizeof (cairo_surface_snapshot_t));
     if (unlikely (snapshot == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_SURFACE_FINISHED));
 
diff -dupr a/src/cairo-surface-subsurface.c b/src/cairo-surface-subsurface.c
--- a/src/cairo-surface-subsurface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-surface-subsurface.c	2017-10-10 15:31:44.854747536 -0700
@@ -462,7 +462,7 @@ cairo_surface_create_for_rectangle (cair
     if (unlikely (target->finished))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_SURFACE_FINISHED));
 
-    surface = malloc (sizeof (cairo_surface_subsurface_t));
+    surface = _cairo_malloc (sizeof (cairo_surface_subsurface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -521,7 +521,7 @@ _cairo_surface_create_for_rectangle_int
 
     assert (target->backend->type != CAIRO_SURFACE_TYPE_SUBSURFACE);
 
-    surface = malloc (sizeof (cairo_surface_subsurface_t));
+    surface = _cairo_malloc (sizeof (cairo_surface_subsurface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-svg-surface.c b/src/cairo-svg-surface.c
--- a/src/cairo-svg-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-svg-surface.c	2017-10-10 15:31:44.854747536 -0700
@@ -476,7 +476,7 @@ _cairo_svg_surface_create_for_document (
     cairo_surface_t *paginated;
     cairo_status_t status, status_ignored;
 
-    surface = malloc (sizeof (cairo_svg_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_svg_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -2658,7 +2658,7 @@ _cairo_svg_document_create (cairo_output
     if (output_stream->status)
 	return output_stream->status;
 
-    document = malloc (sizeof (cairo_svg_document_t));
+    document = _cairo_malloc (sizeof (cairo_svg_document_t));
     if (unlikely (document == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-tee-surface.c b/src/cairo-tee-surface.c
--- a/src/cairo-tee-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-tee-surface.c	2017-10-10 15:31:44.854747536 -0700
@@ -428,7 +428,7 @@ cairo_tee_surface_create (cairo_surface_
     if (unlikely (master->status))
 	return _cairo_surface_create_in_error (master->status);
 
-    surface = malloc (sizeof (cairo_tee_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_tee_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-tor22-scan-converter.c b/src/cairo-tor22-scan-converter.c
--- a/src/cairo-tor22-scan-converter.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-tor22-scan-converter.c	2017-10-10 15:31:44.854747536 -0700
@@ -504,7 +504,7 @@ _pool_chunk_create(struct pool *pool, si
 {
     struct _pool_chunk *p;
 
-    p = malloc(size + sizeof(struct _pool_chunk));
+    p = _cairo_malloc (size + sizeof(struct _pool_chunk));
     if (unlikely (NULL == p))
 	longjmp (*pool->jmp, _cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1682,7 +1682,7 @@ _cairo_tor22_scan_converter_create (int
     cairo_tor22_scan_converter_t *self;
     cairo_status_t status;
 
-    self = malloc (sizeof(struct _cairo_tor22_scan_converter));
+    self = _cairo_malloc (sizeof(struct _cairo_tor22_scan_converter));
     if (unlikely (self == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto bail_nomem;
diff -dupr a/src/cairo-tor-scan-converter.c b/src/cairo-tor-scan-converter.c
--- a/src/cairo-tor-scan-converter.c	2015-06-24 18:27:05.000000000 -0700
+++ b/src/cairo-tor-scan-converter.c	2017-10-10 15:31:44.854747536 -0700
@@ -483,7 +483,7 @@ _pool_chunk_create(struct pool *pool, si
 {
     struct _pool_chunk *p;
 
-    p = malloc(SIZEOF_POOL_CHUNK + size);
+    p = _cairo_malloc (SIZEOF_POOL_CHUNK + size);
     if (unlikely (NULL == p))
 	longjmp (*pool->jmp, _cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1872,7 +1872,7 @@ _cairo_tor_scan_converter_create (int
     cairo_tor_scan_converter_t *self;
     cairo_status_t status;
 
-    self = malloc (sizeof(struct _cairo_tor_scan_converter));
+    self = _cairo_malloc (sizeof(struct _cairo_tor_scan_converter));
     if (unlikely (self == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto bail_nomem;
diff -dupr a/src/cairo-toy-font-face.c b/src/cairo-toy-font-face.c
--- a/src/cairo-toy-font-face.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/cairo-toy-font-face.c	2017-10-10 15:31:44.854747536 -0700
@@ -312,7 +312,7 @@ cairo_toy_font_face_create (const char
     }
 
     /* Otherwise create it and insert into hash table. */
-    font_face = malloc (sizeof (cairo_toy_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_toy_font_face_t));
     if (unlikely (font_face == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto UNWIND_HASH_TABLE_LOCK;
diff -dupr a/src/cairo-truetype-subset.c b/src/cairo-truetype-subset.c
--- a/src/cairo-truetype-subset.c	2016-12-07 17:59:06.000000000 -0800
+++ b/src/cairo-truetype-subset.c	2017-10-10 15:31:44.854747536 -0700
@@ -187,7 +187,7 @@ _cairo_truetype_font_create (cairo_scale
     if (unlikely (status))
 	return status;
 
-    font = malloc (sizeof (cairo_truetype_font_t));
+    font = _cairo_malloc (sizeof (cairo_truetype_font_t));
     if (unlikely (font == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -236,7 +236,7 @@ _cairo_truetype_font_create (cairo_scale
 
     /* If the PS name is not found, create a CairoFont-x-y name. */
     if (font->base.ps_name == NULL) {
-        font->base.ps_name = malloc (30);
+        font->base.ps_name = _cairo_malloc (30);
         if (unlikely (font->base.ps_name == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
             goto fail3;
@@ -611,7 +611,7 @@ cairo_truetype_font_write_glyf_table (ca
     else
 	size = sizeof (int32_t) * (font->num_glyphs_in_face + 1);
 
-    u.bytes = malloc (size);
+    u.bytes = _cairo_malloc (size);
     if (unlikely (u.bytes == NULL))
 	return _cairo_truetype_font_set_error (font, CAIRO_STATUS_NO_MEMORY);
 
@@ -1184,7 +1184,7 @@ cairo_truetype_subset_init_internal (cai
     truetype_subset->descent = (double)font->base.descent/font->base.units_per_em;
 
     if (length) {
-	truetype_subset->data = malloc (length);
+	truetype_subset->data = _cairo_malloc (length);
 	if (unlikely (truetype_subset->data == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto fail4;
@@ -1197,7 +1197,7 @@ cairo_truetype_subset_init_internal (cai
 
     if (num_strings) {
 	offsets_length = num_strings * sizeof (unsigned long);
-	truetype_subset->string_offsets = malloc (offsets_length);
+	truetype_subset->string_offsets = _cairo_malloc (offsets_length);
 	if (unlikely (truetype_subset->string_offsets == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto fail5;
@@ -1285,7 +1285,11 @@ _cairo_truetype_reverse_cmap (cairo_scal
 	return CAIRO_INT_STATUS_UNSUPPORTED;
 
     size = be16_to_cpu (map->length);
-    map = malloc (size);
+    /* minimum table size is 24 bytes */
+    if (size < 24)
+	return CAIRO_INT_STATUS_UNSUPPORTED;
+
+    map = _cairo_malloc (size);
     if (unlikely (map == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1429,7 +1433,7 @@ find_name (tt_name_t *name, int name_id,
             be16_to_cpu (record->encoding) == encoding &&
 	    (language == -1 || be16_to_cpu (record->language) == language)) {
 
-	    str = malloc (be16_to_cpu (record->length) + 1);
+	    str = _cairo_malloc (be16_to_cpu (record->length) + 1);
 	    if (str == NULL)
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1456,7 +1460,7 @@ find_name (tt_name_t *name, int name_id,
 	for (i = 0; i < u_len; i++)
 	    size += _cairo_ucs4_to_utf8 (be16_to_cpu(u[i]), NULL);
 
-	utf8 = malloc (size + 1);
+	utf8 = _cairo_malloc (size + 1);
 	if (utf8 == NULL) {
 	    status =_cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto fail;
@@ -1491,7 +1495,7 @@ find_name (tt_name_t *name, int name_id,
 	}
     }
     if (has_tag) {
-	p = malloc (len - 6);
+	p = _cairo_malloc (len - 6);
 	if (unlikely (p == NULL)) {
 	    status =_cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto fail;
@@ -1536,7 +1540,7 @@ _cairo_truetype_read_font_name (cairo_sc
     if (status)
 	return status;
 
-    name = malloc (size);
+    name = _cairo_malloc (size);
     if (name == NULL)
         return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-type1-fallback.c b/src/cairo-type1-fallback.c
--- a/src/cairo-type1-fallback.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-type1-fallback.c	2017-10-10 15:31:44.854747536 -0700
@@ -760,7 +760,7 @@ _cairo_type1_fallback_init_internal (cai
 
     length = font->header_size + font->data_size +
 	font->trailer_size;
-    type1_subset->data = malloc (length);
+    type1_subset->data = _cairo_malloc (length);
     if (unlikely (type1_subset->data == NULL)) {
         status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto fail3;
diff -dupr a/src/cairo-type1-subset.c b/src/cairo-type1-subset.c
--- a/src/cairo-type1-subset.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/cairo-type1-subset.c	2017-10-10 15:31:44.858747387 -0700
@@ -326,7 +326,7 @@ cairo_type1_font_subset_get_matrix (cair
 	return CAIRO_INT_STATUS_UNSUPPORTED;
 
     s_max = end - start + 5*decimal_point_len + 1;
-    s = malloc (s_max);
+    s = _cairo_malloc (s_max);
     if (unlikely (s == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -420,7 +420,7 @@ cairo_type1_font_subset_get_fontname (ca
     while (end > start && _cairo_isspace(end[-1]))
 	end--;
 
-    s = malloc (end - start + 1);
+    s = _cairo_malloc (end - start + 1);
     if (unlikely (s == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -624,7 +624,7 @@ cairo_type1_font_subset_decrypt_eexec_se
     in = (unsigned char *) font->eexec_segment;
     end = (unsigned char *) in + font->eexec_segment_size;
 
-    font->cleartext = malloc (font->eexec_segment_size + 1);
+    font->cleartext = _cairo_malloc (font->eexec_segment_size + 1);
     if (unlikely (font->cleartext == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -783,7 +783,7 @@ cairo_type1_font_subset_parse_charstring
     const unsigned char *p;
     int command;
 
-    charstring = malloc (encrypted_charstring_length);
+    charstring = _cairo_malloc (encrypted_charstring_length);
     if (unlikely (charstring == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1096,7 +1096,7 @@ cairo_type1_font_subset_build_glyph_list
     glyph_data_t glyph;
     cairo_status_t status;
 
-    s = malloc (name_length + 1);
+    s = _cairo_malloc (name_length + 1);
     if (unlikely (s == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1285,7 +1285,7 @@ cairo_type1_font_subset_write_private_di
         if (lenIV_end == NULL)
 	    return CAIRO_INT_STATUS_UNSUPPORTED;
 
-        lenIV_str = malloc (lenIV_end - lenIV_start + 1);
+        lenIV_str = _cairo_malloc (lenIV_end - lenIV_start + 1);
         if (unlikely (lenIV_str == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1642,7 +1642,7 @@ cairo_type1_font_subset_generate (void
 	return CAIRO_INT_STATUS_UNSUPPORTED;
 
     font->type1_length = data_length;
-    font->type1_data = malloc (font->type1_length);
+    font->type1_data = _cairo_malloc (font->type1_length);
     if (unlikely (font->type1_data == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1762,7 +1762,7 @@ _cairo_type1_subset_init (cairo_type1_su
     length = font.base.header_size +
 	     font.base.data_size +
 	     font.base.trailer_size;
-    type1_subset->data = malloc (length);
+    type1_subset->data = _cairo_malloc (length);
     if (unlikely (type1_subset->data == NULL))
 	goto fail3;
 
diff -dupr a/src/cairo-type3-glyph-surface.c b/src/cairo-type3-glyph-surface.c
--- a/src/cairo-type3-glyph-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-type3-glyph-surface.c	2017-10-10 15:31:44.858747387 -0700
@@ -83,7 +83,7 @@ _cairo_type3_glyph_surface_create (cairo
     if (unlikely (stream != NULL && stream->status))
 	return _cairo_surface_create_in_error (stream->status);
 
-    surface = malloc (sizeof (cairo_type3_glyph_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_type3_glyph_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-user-font.c b/src/cairo-user-font.c
--- a/src/cairo-user-font.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/cairo-user-font.c	2017-10-10 15:31:44.858747387 -0700
@@ -402,7 +402,7 @@ _cairo_user_font_face_scaled_font_create
 
     font_face->immutable = TRUE;
 
-    user_scaled_font = malloc (sizeof (cairo_user_scaled_font_t));
+    user_scaled_font = _cairo_malloc (sizeof (cairo_user_scaled_font_t));
     if (unlikely (user_scaled_font == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -544,7 +544,7 @@ cairo_user_font_face_create (void)
 {
     cairo_user_font_face_t *font_face;
 
-    font_face = malloc (sizeof (cairo_user_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_user_font_face_t));
     if (!font_face) {
 	_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	return (cairo_font_face_t *)&_cairo_font_face_nil;
diff -dupr a/src/cairo-vg-surface.c b/src/cairo-vg-surface.c
--- a/src/cairo-vg-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-vg-surface.c	2017-10-10 15:31:44.858747387 -0700
@@ -1517,7 +1517,7 @@ _vg_surface_create_internal (cairo_vg_co
 {
     cairo_vg_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_vg_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_vg_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1711,7 +1711,7 @@ cairo_vg_context_create_for_glx (Display
     cairo_vg_context_t *context;
     cairo_status_t status;
 
-    context = malloc (sizeof (*context));
+    context = _cairo_malloc (sizeof (*context));
     if (unlikely (context == NULL))
 	return (cairo_vg_context_t *) &_vg_context_nil;
 
@@ -1816,7 +1816,7 @@ cairo_vg_context_create_for_egl (EGLDisp
     cairo_vg_context_t *context;
     cairo_status_t status;
 
-    context = malloc (sizeof (*context));
+    context = _cairo_malloc (sizeof (*context));
     if (unlikely (context == NULL))
 	return (cairo_vg_context_t *) &_vg_context_nil;
 
diff -dupr a/src/cairo-xcb-connection.c b/src/cairo-xcb-connection.c
--- a/src/cairo-xcb-connection.c	2015-06-24 18:27:05.000000000 -0700
+++ b/src/cairo-xcb-connection.c	2017-10-10 15:31:44.858747387 -0700
@@ -111,7 +111,7 @@ _cairo_xcb_connection_find_visual_format
 		cairo_xcb_xrender_format_t *f;
 		cairo_status_t status;
 
-		f = malloc (sizeof (cairo_xcb_xrender_format_t));
+		f = _cairo_malloc (sizeof (cairo_xcb_xrender_format_t));
 		if (unlikely (f == NULL))
 		    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -177,7 +177,7 @@ _cairo_xcb_connection_parse_xrender_form
 	    if (! _cairo_hash_table_lookup (connection->xrender_formats, &key)) {
 		cairo_xcb_xrender_format_t *f;
 
-		f = malloc (sizeof (cairo_xcb_xrender_format_t));
+		f = _cairo_malloc (sizeof (cairo_xcb_xrender_format_t));
 		if (unlikely (f == NULL))
 		    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -634,7 +634,7 @@ _cairo_xcb_connection_get (xcb_connectio
 	}
     }
 
-    connection = malloc (sizeof (cairo_xcb_connection_t));
+    connection = _cairo_malloc (sizeof (cairo_xcb_connection_t));
     if (unlikely (connection == NULL))
 	goto unlock;
 
diff -dupr a/src/cairo-xcb-screen.c b/src/cairo-xcb-screen.c
--- a/src/cairo-xcb-screen.c	2015-06-24 18:27:05.000000000 -0700
+++ b/src/cairo-xcb-screen.c	2017-10-10 15:31:44.858747387 -0700
@@ -249,7 +249,7 @@ _cairo_xcb_screen_get (xcb_connection_t
 	}
     }
 
-    screen = malloc (sizeof (cairo_xcb_screen_t));
+    screen = _cairo_malloc (sizeof (cairo_xcb_screen_t));
     if (unlikely (screen == NULL))
 	goto unlock;
 
diff -dupr a/src/cairo-xcb-shm.c b/src/cairo-xcb-shm.c
--- a/src/cairo-xcb-shm.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-xcb-shm.c	2017-10-10 15:31:44.858747387 -0700
@@ -209,7 +209,7 @@ _cairo_xcb_connection_allocate_shm_info
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
 
-    pool = malloc (sizeof (cairo_xcb_shm_mem_pool_t));
+    pool = _cairo_malloc (sizeof (cairo_xcb_shm_mem_pool_t));
     if (unlikely (pool == NULL)) {
 	CAIRO_MUTEX_UNLOCK (connection->shm_mutex);
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-xcb-surface.c b/src/cairo-xcb-surface.c
--- a/src/cairo-xcb-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xcb-surface.c	2017-10-10 15:31:44.862747238 -0700
@@ -1074,7 +1074,7 @@ _cairo_xcb_surface_create_internal (cair
 {
     cairo_xcb_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_xcb_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_xcb_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-xcb-surface-core.c b/src/cairo-xcb-surface-core.c
--- a/src/cairo-xcb-surface-core.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xcb-surface-core.c	2017-10-10 15:31:44.858747387 -0700
@@ -85,7 +85,7 @@ _cairo_xcb_pixmap_create (cairo_xcb_surf
 {
     cairo_xcb_pixmap_t *surface;
 
-    surface = malloc (sizeof (cairo_xcb_pixmap_t));
+    surface = _cairo_malloc (sizeof (cairo_xcb_pixmap_t));
     if (unlikely (surface == NULL))
 	return (cairo_xcb_pixmap_t *)
 	    _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
@@ -118,7 +118,7 @@ _cairo_xcb_pixmap_copy (cairo_xcb_surfac
 {
     cairo_xcb_pixmap_t *surface;
 
-    surface = malloc (sizeof (cairo_xcb_pixmap_t));
+    surface = _cairo_malloc (sizeof (cairo_xcb_pixmap_t));
     if (unlikely (surface == NULL))
 	return (cairo_xcb_pixmap_t *)
 	    _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
diff -dupr a/src/cairo-xcb-surface-render.c b/src/cairo-xcb-surface-render.c
--- a/src/cairo-xcb-surface-render.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xcb-surface-render.c	2017-10-10 15:31:44.862747238 -0700
@@ -114,7 +114,7 @@ _cairo_xcb_picture_create (cairo_xcb_scr
 {
     cairo_xcb_picture_t *surface;
 
-    surface = malloc (sizeof (cairo_xcb_picture_t));
+    surface = _cairo_malloc (sizeof (cairo_xcb_picture_t));
     if (unlikely (surface == NULL))
 	return (cairo_xcb_picture_t *)
 	    _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
@@ -4140,7 +4140,7 @@ _cairo_xcb_font_create (cairo_xcb_connec
     cairo_xcb_font_t	*priv;
     int i;
 
-    priv = malloc (sizeof (cairo_xcb_font_t));
+    priv = _cairo_malloc (sizeof (cairo_xcb_font_t));
     if (unlikely (priv == NULL))
 	return NULL;
 
@@ -4333,7 +4333,7 @@ _cairo_xcb_glyph_fini (cairo_scaled_glyp
 	}
 
 	if (to_free == NULL) {
-	    to_free = malloc (sizeof (cairo_xcb_font_glyphset_free_glyphs_t));
+	    to_free = _cairo_malloc (sizeof (cairo_xcb_font_glyphset_free_glyphs_t));
 	    if (unlikely (to_free == NULL)) {
 		_cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 		return; /* XXX cannot propagate failure */
@@ -4360,7 +4360,7 @@ _cairo_xcb_glyph_attach (cairo_xcb_conne
 {
     cairo_xcb_glyph_private_t *priv;
 
-    priv = malloc (sizeof (*priv));
+    priv = _cairo_malloc (sizeof (*priv));
     if (unlikely (priv == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -4471,7 +4471,7 @@ _cairo_xcb_surface_add_glyph (cairo_xcb_
 	    if (c == 0)
 		break;
 
-	    new = malloc (c);
+	    new = _cairo_malloc (c);
 	    if (unlikely (new == NULL)) {
 		status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 		goto BAIL;
@@ -4502,7 +4502,7 @@ _cairo_xcb_surface_add_glyph (cairo_xcb_
 	    if (c == 0)
 		break;
 
-	    new = malloc (4 * c);
+	    new = _cairo_malloc (4 * c);
 	    if (unlikely (new == NULL)) {
 		status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 		goto BAIL;
@@ -4584,7 +4584,7 @@ _emit_glyphs_chunk (cairo_xcb_surface_t
     int i;
 
     if (estimated_req_size > ARRAY_LENGTH (stack_buf)) {
-	buf = malloc (estimated_req_size);
+	buf = _cairo_malloc (estimated_req_size);
 	if (unlikely (buf == NULL))
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
     }
diff -dupr a/src/cairo-xlib-display.c b/src/cairo-xlib-display.c
--- a/src/cairo-xlib-display.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/cairo-xlib-display.c	2017-10-10 15:31:44.862747238 -0700
@@ -207,7 +207,7 @@ _cairo_xlib_device_create (Display *dpy)
 	}
     }
 
-    display = malloc (sizeof (cairo_xlib_display_t));
+    display = _cairo_malloc (sizeof (cairo_xlib_display_t));
     if (unlikely (display == NULL)) {
 	device = _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 	goto UNLOCK;
diff -dupr a/src/cairo-xlib-render-compositor.c b/src/cairo-xlib-render-compositor.c
--- a/src/cairo-xlib-render-compositor.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xlib-render-compositor.c	2017-10-10 15:31:44.862747238 -0700
@@ -989,7 +989,7 @@ _cairo_xlib_font_create (cairo_xlib_disp
     cairo_xlib_font_t *priv;
     int i;
 
-    priv = malloc (sizeof (cairo_xlib_font_t));
+    priv = _cairo_malloc (sizeof (cairo_xlib_font_t));
     if (unlikely (priv == NULL))
 	return NULL;
 
@@ -1089,7 +1089,7 @@ _cairo_xlib_glyph_attach (cairo_xlib_dis
 {
     cairo_xlib_glyph_private_t *priv;
 
-    priv = malloc (sizeof (*priv));
+    priv = _cairo_malloc (sizeof (*priv));
     if (unlikely (priv == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1290,7 +1290,7 @@ _cairo_xlib_surface_add_glyph (cairo_xli
 	    if (c == 0)
 		break;
 
-	    new = malloc (c);
+	    new = _cairo_malloc (c);
 	    if (!new) {
 		status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 		goto BAIL;
@@ -1318,7 +1318,7 @@ _cairo_xlib_surface_add_glyph (cairo_xli
 	    if (c == 0)
 		break;
 
-	    new = malloc (4 * c);
+	    new = _cairo_malloc (4 * c);
 	    if (unlikely (new == NULL)) {
 		status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 		goto BAIL;
diff -dupr a/src/cairo-xlib-screen.c b/src/cairo-xlib-screen.c
--- a/src/cairo-xlib-screen.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/cairo-xlib-screen.c	2017-10-10 15:31:44.862747238 -0700
@@ -330,7 +330,7 @@ _cairo_xlib_screen_get (Display *dpy,
 	goto CLEANUP_DISPLAY;
     }
 
-    info = malloc (sizeof (cairo_xlib_screen_t));
+    info = _cairo_malloc (sizeof (cairo_xlib_screen_t));
     if (unlikely (info == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_DISPLAY;
diff -dupr a/src/cairo-xlib-source.c b/src/cairo-xlib-source.c
--- a/src/cairo-xlib-source.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xlib-source.c	2017-10-10 15:31:44.862747238 -0700
@@ -109,7 +109,7 @@ source (cairo_xlib_surface_t *dst, Pictu
     if (picture == None)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
-    source = malloc (sizeof (*source));
+    source = _cairo_malloc (sizeof (*source));
     if (unlikely (source == NULL)) {
 	XRenderFreePicture (dst->display->display, picture);
 	if (pixmap)
@@ -964,7 +964,7 @@ surface_source (cairo_xlib_surface_t *ds
 	_cairo_xlib_shm_surface_get_pixmap (src)) {
 	cairo_xlib_proxy_t *proxy;
 
-	proxy = malloc (sizeof(*proxy));
+	proxy = _cairo_malloc (sizeof(*proxy));
 	if (unlikely (proxy == NULL))
 	    return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-xlib-surface.c b/src/cairo-xlib-surface.c
--- a/src/cairo-xlib-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xlib-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -1770,7 +1770,7 @@ found:
 	;
     }
 
-    surface = malloc (sizeof (cairo_xlib_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_xlib_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/cairo-xlib-surface-shm.c b/src/cairo-xlib-surface-shm.c
--- a/src/cairo-xlib-surface-shm.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xlib-surface-shm.c	2017-10-10 15:31:44.862747238 -0700
@@ -573,7 +573,7 @@ _cairo_xlib_shm_pool_create(cairo_xlib_d
     size_t bytes, maxbits = 16, minbits = MIN_BITS;
     Status success;
 
-    pool = malloc (sizeof (cairo_xlib_shm_t));
+    pool = _cairo_malloc (sizeof (cairo_xlib_shm_t));
     if (pool == NULL)
 	return NULL;
 
@@ -650,7 +650,7 @@ _cairo_xlib_shm_info_create (cairo_xlib_
 
     assert (mem != NULL);
 
-    info = malloc (sizeof (*info));
+    info = _cairo_malloc (sizeof (*info));
     if (info == NULL) {
 	_cairo_mempool_free (&pool->mem, mem);
 	return NULL;
@@ -814,7 +814,7 @@ _cairo_xlib_shm_surface_create (cairo_xl
     if (size < MIN_SIZE)
 	return NULL;
 
-    shm = malloc (sizeof (*shm));
+    shm = _cairo_malloc (sizeof (*shm));
     if (unlikely (shm == NULL))
 	return (cairo_xlib_shm_surface_t *)_cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1386,7 +1386,7 @@ _cairo_xlib_display_init_shm (cairo_xlib
     if (!can_use_shm (display->display, &has_pixmap))
 	return;
 
-    shm = malloc (sizeof (*shm));
+    shm = _cairo_malloc (sizeof (*shm));
     if (unlikely (shm == NULL))
 	return;
 
diff -dupr a/src/cairo-xlib-visual.c b/src/cairo-xlib-visual.c
--- a/src/cairo-xlib-visual.c	2013-06-06 09:44:15.000000000 -0700
+++ b/src/cairo-xlib-visual.c	2017-10-10 15:31:44.866747089 -0700
@@ -82,7 +82,7 @@ _cairo_xlib_visual_info_create (Display
     for (i = 0; i < RAMP_SIZE; i++)
 	ramp_index_to_short[i] = (0xffff * i + ((RAMP_SIZE-1)>>1)) / (RAMP_SIZE-1);
 
-    info = malloc (sizeof (cairo_xlib_visual_info_t));
+    info = _cairo_malloc (sizeof (cairo_xlib_visual_info_t));
     if (unlikely (info == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/cairo-xlib-xcb-surface.c b/src/cairo-xlib-xcb-surface.c
--- a/src/cairo-xlib-xcb-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xlib-xcb-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -391,7 +391,7 @@ _cairo_xlib_xcb_device_create (Display *
 	}
     }
 
-    display = malloc (sizeof (cairo_xlib_xcb_display_t));
+    display = _cairo_malloc (sizeof (cairo_xlib_xcb_display_t));
     if (unlikely (display == NULL)) {
 	device = _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 	goto unlock;
@@ -438,7 +438,7 @@ _cairo_xlib_xcb_surface_create (void *dp
     if (unlikely (xcb->status))
 	return xcb;
 
-    surface = malloc (sizeof (*surface));
+    surface = _cairo_malloc (sizeof (*surface));
     if (unlikely (surface == NULL)) {
 	cairo_surface_destroy (xcb);
 	return _cairo_surface_create_in_error (CAIRO_STATUS_NO_MEMORY);
diff -dupr a/src/cairo-xml-surface.c b/src/cairo-xml-surface.c
--- a/src/cairo-xml-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/cairo-xml-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -258,7 +258,7 @@ _cairo_xml_create_internal (cairo_output
 {
     cairo_xml_t *xml;
 
-    xml = malloc (sizeof (cairo_xml_t));
+    xml = _cairo_malloc (sizeof (cairo_xml_t));
     if (unlikely (xml == NULL))
 	return _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -933,7 +933,7 @@ _cairo_xml_emit_type42_font (cairo_xml_t
     if (unlikely (status))
 	return status;
 
-    buf = malloc (size);
+    buf = _cairo_malloc (size);
     if (unlikely (buf == NULL))
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1098,7 +1098,7 @@ _cairo_xml_surface_create_internal (cair
 {
     cairo_xml_surface_t *surface;
 
-    surface = malloc (sizeof (cairo_xml_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_xml_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/drm/cairo-drm-gallium-surface.c b/src/drm/cairo-drm-gallium-surface.c
--- a/src/drm/cairo-drm-gallium-surface.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-gallium-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -529,7 +529,7 @@ _gallium_fake_bo_create (uint32_t size,
 
     /* XXX integrate with winsys handle */
 
-    bo = malloc (sizeof (cairo_drm_bo_t));
+    bo = _cairo_malloc (sizeof (cairo_drm_bo_t));
 
     CAIRO_REFERENCE_COUNT_INIT (&bo->ref_count, 1);
     bo->name = name;
@@ -556,7 +556,7 @@ gallium_surface_create_internal (gallium
     cairo_format_t format;
     int stride, size;
 
-    surface = malloc (sizeof (gallium_surface_t));
+    surface = _cairo_malloc (sizeof (gallium_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -641,7 +641,7 @@ gallium_surface_create_for_name (cairo_d
     cairo_status_t status;
     cairo_content_t content;
 
-    surface = malloc (sizeof (gallium_surface_t));
+    surface = _cairo_malloc (sizeof (gallium_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -768,7 +768,7 @@ _cairo_drm_gallium_device_create (int fd
 	return NULL;
     }
 
-    device = malloc (sizeof (gallium_device_t));
+    device = _cairo_malloc (sizeof (gallium_device_t));
     if (device == NULL) {
 	dlclose (handle);
 	return _cairo_drm_device_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
diff -dupr a/src/drm/cairo-drm-i915-shader.c b/src/drm/cairo-drm-i915-shader.c
--- a/src/drm/cairo-drm-i915-shader.c	2014-11-12 10:37:36.000000000 -0800
+++ b/src/drm/cairo-drm-i915-shader.c	2017-10-10 15:31:44.866747089 -0700
@@ -84,7 +84,7 @@ i915_packed_pixel_surface_create (i915_d
     if (width > 2048 || height > 2048)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_SIZE));
 
-    surface = malloc (sizeof (i915_packed_pixel_surface_t));
+    surface = _cairo_malloc (sizeof (i915_packed_pixel_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/drm/cairo-drm-i915-spans.c b/src/drm/cairo-drm-i915-spans.c
--- a/src/drm/cairo-drm-i915-spans.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-i915-spans.c	2017-10-10 15:31:44.866747089 -0700
@@ -98,7 +98,7 @@ i915_accumulate_rectangle (i915_spans_t
     if (unlikely (spans->vbo_offset + size > I915_VBO_SIZE)) {
 	struct vbo *vbo;
 
-	vbo = malloc (sizeof (struct vbo));
+	vbo = _cairo_malloc (sizeof (struct vbo));
 	if (unlikely (vbo == NULL)) {
 	    /* throw error! */
 	}
diff -dupr a/src/drm/cairo-drm-i915-surface.c b/src/drm/cairo-drm-i915-surface.c
--- a/src/drm/cairo-drm-i915-surface.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-i915-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -2432,7 +2432,7 @@ i915_surface_create_internal (cairo_drm_
     i915_surface_t *surface;
     cairo_status_t status_ignored;
 
-    surface = malloc (sizeof (i915_surface_t));
+    surface = _cairo_malloc (sizeof (i915_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -2542,7 +2542,7 @@ i915_surface_create_for_name (cairo_drm_
 	break;
     }
 
-    surface = malloc (sizeof (i915_surface_t));
+    surface = _cairo_malloc (sizeof (i915_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -2698,7 +2698,7 @@ i915_surface_create_from_cacheable_image
 	    break;
     }
     if (node == NULL) {
-	cache = malloc (sizeof (intel_buffer_cache_t));
+	cache = _cairo_malloc (sizeof (intel_buffer_cache_t));
 	if (unlikely (cache == NULL)) {
 	    status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    goto CLEANUP_DEVICE;
@@ -2735,7 +2735,7 @@ i915_surface_create_from_cacheable_image
     if (unlikely (status))
 	goto CLEANUP_CACHE;
 
-    surface = malloc (sizeof (i915_surface_t));
+    surface = _cairo_malloc (sizeof (i915_surface_t));
     if (unlikely (surface == NULL)) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_CACHE;
@@ -2879,7 +2879,7 @@ _cairo_drm_i915_device_create (int fd, d
     if (! intel_info (fd, &gtt_size))
 	return NULL;
 
-    device = malloc (sizeof (i915_device_t));
+    device = _cairo_malloc (sizeof (i915_device_t));
     if (device == NULL)
 	return (cairo_drm_device_t *) _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/drm/cairo-drm-i965-glyphs.c b/src/drm/cairo-drm-i965-glyphs.c
--- a/src/drm/cairo-drm-i965-glyphs.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-i965-glyphs.c	2017-10-10 15:31:44.866747089 -0700
@@ -71,7 +71,7 @@ i965_glyphs_accumulate_rectangle (i965_g
     if (unlikely (glyphs->vbo_offset + size > I965_VERTEX_SIZE)) {
 	struct i965_vbo *vbo;
 
-	vbo = malloc (sizeof (struct i965_vbo));
+	vbo = _cairo_malloc (sizeof (struct i965_vbo));
 	if (unlikely (vbo == NULL)) {
 	    /* throw error! */
 	}
diff -dupr a/src/drm/cairo-drm-i965-spans.c b/src/drm/cairo-drm-i965-spans.c
--- a/src/drm/cairo-drm-i965-spans.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-i965-spans.c	2017-10-10 15:31:44.866747089 -0700
@@ -87,7 +87,7 @@ i965_spans_accumulate_rectangle (i965_sp
     if (unlikely (spans->vbo_offset + size > I965_VERTEX_SIZE)) {
 	struct i965_vbo *vbo;
 
-	vbo = malloc (sizeof (struct i965_vbo));
+	vbo = _cairo_malloc (sizeof (struct i965_vbo));
 	if (unlikely (vbo == NULL)) {
 	    /* throw error! */
 	}
diff -dupr a/src/drm/cairo-drm-i965-surface.c b/src/drm/cairo-drm-i965-surface.c
--- a/src/drm/cairo-drm-i965-surface.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-i965-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -1569,7 +1569,7 @@ i965_surface_create_internal (cairo_drm_
     i965_surface_t *surface;
     cairo_status_t status_ignored;
 
-    surface = malloc (sizeof (i965_surface_t));
+    surface = _cairo_malloc (sizeof (i965_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1658,7 +1658,7 @@ i965_surface_create_for_name (cairo_drm_
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_FORMAT));
     }
 
-    surface = malloc (sizeof (i965_surface_t));
+    surface = _cairo_malloc (sizeof (i965_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -1809,7 +1809,7 @@ _cairo_drm_i965_device_create (int fd, d
     if (! intel_info (fd, &gtt_size))
 	return  NULL;
 
-    device = malloc (sizeof (i965_device_t));
+    device = _cairo_malloc (sizeof (i965_device_t));
     if (unlikely (device == NULL))
 	return (cairo_drm_device_t *) _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/drm/cairo-drm-intel.c b/src/drm/cairo-drm-intel.c
--- a/src/drm/cairo-drm-intel.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-intel.c	2017-10-10 15:31:44.866747089 -0700
@@ -618,7 +618,7 @@ _intel_bo_put_a1_image (intel_device_t *
 	uint8_t *dst;
 
 	if (width > (int) sizeof (buf)) {
-	    a8 = malloc (width);
+	    a8 = _cairo_malloc (width);
 	    if (a8 == NULL)
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	}
@@ -886,7 +886,7 @@ intel_glyph_cache_add_glyph (intel_devic
 	int x;
 
 	if (width > (int) sizeof (buf)) {
-	    a8 = malloc (width);
+	    a8 = _cairo_malloc (width);
 	    if (unlikely (a8 == NULL))
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	}
diff -dupr a/src/drm/cairo-drm-intel-surface.c b/src/drm/cairo-drm-intel-surface.c
--- a/src/drm/cairo-drm-intel-surface.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-intel-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -309,7 +309,7 @@ intel_surface_create (cairo_drm_device_t
     intel_surface_t *surface;
     cairo_status_t status;
 
-    surface = malloc (sizeof (intel_surface_t));
+    surface = _cairo_malloc (sizeof (intel_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -360,7 +360,7 @@ intel_surface_create_for_name (cairo_drm
     if (stride < cairo_format_stride_for_width (format, width))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_STRIDE));
 
-    surface = malloc (sizeof (intel_surface_t));
+    surface = _cairo_malloc (sizeof (intel_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -422,7 +422,7 @@ _cairo_drm_intel_device_create (int fd,
     if (! intel_info (fd, NULL))
 	return NULL;
 
-    device = malloc (sizeof (intel_device_t));
+    device = _cairo_malloc (sizeof (intel_device_t));
     if (unlikely (device == NULL))
 	return (cairo_drm_device_t *) _cairo_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/drm/cairo-drm-radeon-surface.c b/src/drm/cairo-drm-radeon-surface.c
--- a/src/drm/cairo-drm-radeon-surface.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/drm/cairo-drm-radeon-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -311,7 +311,7 @@ radeon_surface_create_internal (cairo_dr
     radeon_surface_t *surface;
     cairo_status_t status;
 
-    surface = malloc (sizeof (radeon_surface_t));
+    surface = _cairo_malloc (sizeof (radeon_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -379,7 +379,7 @@ radeon_surface_create_for_name (cairo_dr
     if (stride < cairo_format_stride_for_width (format, width))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_STRIDE));
 
-    surface = malloc (sizeof (radeon_surface_t));
+    surface = _cairo_malloc (sizeof (radeon_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -421,7 +421,7 @@ _cairo_drm_radeon_device_create (int fd,
     if (! radeon_info (fd, &gart_size, &vram_size))
 	return NULL;
 
-    device = malloc (sizeof (radeon_device_t));
+    device = _cairo_malloc (sizeof (radeon_device_t));
     if (device == NULL)
 	return _cairo_drm_device_create_in_error (CAIRO_STATUS_NO_MEMORY);
 
diff -dupr a/src/skia/cairo-skia-surface.cpp b/src/skia/cairo-skia-surface.cpp
--- a/src/skia/cairo-skia-surface.cpp	2014-11-12 10:37:36.000000000 -0800
+++ b/src/skia/cairo-skia-surface.cpp	2017-10-10 15:31:44.866747089 -0700
@@ -233,7 +233,7 @@ _cairo_skia_surface_create_internal (SkB
     pixman_format_code_t pixman_format;
     SkColorType colorType;
 
-    surface = (cairo_skia_surface_t *) malloc (sizeof (cairo_skia_surface_t));
+    surface = (cairo_skia_surface_t *) _cairo_malloc (sizeof (cairo_skia_surface_t));
     if (unlikely (surface == NULL))
 	return (cairo_skia_surface_t *) _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/test-compositor-surface.c b/src/test-compositor-surface.c
--- a/src/test-compositor-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/test-compositor-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -78,7 +78,7 @@ test_compositor_surface_create (const ca
     if (unlikely (pixman_image == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
-    surface = malloc (sizeof (test_compositor_surface_t));
+    surface = _cairo_malloc (sizeof (test_compositor_surface_t));
     if (unlikely (surface == NULL)) {
 	pixman_image_unref (pixman_image);
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
diff -dupr a/src/test-null-compositor-surface.c b/src/test-null-compositor-surface.c
--- a/src/test-null-compositor-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/test-null-compositor-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -81,7 +81,7 @@ test_compositor_surface_create (const ca
     if (unlikely (pixman_image == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
-    surface = malloc (sizeof (test_compositor_surface_t));
+    surface = _cairo_malloc (sizeof (test_compositor_surface_t));
     if (unlikely (surface == NULL)) {
 	pixman_image_unref (pixman_image);
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
diff -dupr a/src/test-paginated-surface.c b/src/test-paginated-surface.c
--- a/src/test-paginated-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/test-paginated-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -74,7 +74,7 @@ _cairo_test_paginated_surface_create (ca
     if (unlikely (status))
 	return _cairo_surface_create_in_error (status);
 
-    surface = malloc (sizeof (test_paginated_surface_t));
+    surface = _cairo_malloc (sizeof (test_paginated_surface_t));
     if (unlikely (surface == NULL))
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/win32/cairo-win32-debug.c b/src/win32/cairo-win32-debug.c
--- a/src/win32/cairo-win32-debug.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/win32/cairo-win32-debug.c	2017-10-10 15:31:44.866747089 -0700
@@ -66,7 +66,7 @@ _cairo_win32_debug_dump_hrgn (HRGN rgn,
     }
 
     z = GetRegionData(rgn, 0, NULL);
-    rd = (RGNDATA*) malloc(z);
+    rd = (RGNDATA*) _cairo_malloc (z);
     z = GetRegionData(rgn, z, rd);
 
     fprintf (stderr, " %ld rects, bounds: %ld %ld %ld %ld\n",
diff -dupr a/src/win32/cairo-win32-device.c b/src/win32/cairo-win32-device.c
--- a/src/win32/cairo-win32-device.c	2013-03-15 13:29:27.000000000 -0700
+++ b/src/win32/cairo-win32-device.c	2017-10-10 15:31:44.866747089 -0700
@@ -134,7 +134,7 @@ _cairo_win32_device_get (void)
     if (__cairo_win32_device)
 	return cairo_device_reference (__cairo_win32_device);
 
-    device = malloc (sizeof (*device));
+    device = _cairo_malloc (sizeof (*device));
 
     _cairo_device_init (&device->base, &_cairo_win32_device_backend);
 
diff -dupr a/src/win32/cairo-win32-display-surface.c b/src/win32/cairo-win32-display-surface.c
--- a/src/win32/cairo-win32-display-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/win32/cairo-win32-display-surface.c	2017-10-10 15:31:44.866747089 -0700
@@ -298,7 +298,7 @@ _cairo_win32_display_surface_create_for_
     unsigned char *bits;
     int rowstride;
 
-    surface = malloc (sizeof (*surface));
+    surface = _cairo_malloc (sizeof (*surface));
     if (surface == NULL)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
@@ -684,7 +684,7 @@ _cairo_win32_display_surface_set_clip (c
 
     data_size = sizeof (RGNDATAHEADER) + num_rects * sizeof (RECT);
     if (data_size > sizeof (stack)) {
-	data = malloc (data_size);
+	data = _cairo_malloc (data_size);
 	if (!data)
 	    return _cairo_error(CAIRO_STATUS_NO_MEMORY);
     } else
@@ -943,7 +943,7 @@ cairo_win32_surface_create (HDC hdc)
     /* Assume that everything coming in as a HDC is RGB24 */
     format = CAIRO_FORMAT_RGB24;
 
-    surface = malloc (sizeof (*surface));
+    surface = _cairo_malloc (sizeof (*surface));
     if (surface == NULL)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
diff -dupr a/src/win32/cairo-win32-font.c b/src/win32/cairo-win32-font.c
--- a/src/win32/cairo-win32-font.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/win32/cairo-win32-font.c	2017-10-10 15:31:44.866747089 -0700
@@ -323,7 +323,7 @@ _win32_scaled_font_create (LOGFONTW
     if (hdc == NULL)
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
-    f = malloc (sizeof(cairo_win32_scaled_font_t));
+    f = _cairo_malloc (sizeof(cairo_win32_scaled_font_t));
     if (f == NULL)
 	return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -472,7 +472,7 @@ _win32_scaled_font_get_unscaled_hfont (c
 	if (! otm_size)
 	    return _cairo_win32_print_gdi_error ("_win32_scaled_font_get_unscaled_hfont:GetOutlineTextMetrics");
 
-	otm = malloc (otm_size);
+	otm = _cairo_malloc (otm_size);
 	if (otm == NULL)
 	    return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 
@@ -1382,7 +1382,7 @@ _cairo_win32_scaled_font_index_to_ucs4 (
 	goto exit1;
     }
 
-    glyph_set = malloc (res);
+    glyph_set = _cairo_malloc (res);
     if (glyph_set == NULL) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto exit1;
@@ -1688,7 +1688,7 @@ _cairo_win32_scaled_font_init_glyph_path
 	goto CLEANUP_FONT;
     }
 
-    ptr = buffer = malloc (bytesGlyph);
+    ptr = buffer = _cairo_malloc (bytesGlyph);
     if (!buffer) {
 	status = _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	goto CLEANUP_FONT;
@@ -2063,7 +2063,7 @@ cairo_win32_font_face_create_for_logfont
     }
 
     /* Otherwise create it and insert into hash table. */
-    font_face = malloc (sizeof (cairo_win32_font_face_t));
+    font_face = _cairo_malloc (sizeof (cairo_win32_font_face_t));
     if (!font_face) {
         _cairo_error_throw (CAIRO_STATUS_NO_MEMORY);
 	goto FAIL;
diff -dupr a/src/win32/cairo-win32-printing-surface.c b/src/win32/cairo-win32-printing-surface.c
--- a/src/win32/cairo-win32-printing-surface.c	2016-12-07 17:26:33.000000000 -0800
+++ b/src/win32/cairo-win32-printing-surface.c	2017-10-10 15:31:44.870746940 -0700
@@ -871,8 +871,8 @@ _cairo_win32_printing_surface_paint_line
     num_rects = num_stops - 1;
 
     /* Add an extra four points and two rectangles for EXTEND_PAD */
-    vert = malloc (sizeof (TRIVERTEX) * (num_rects*2*num_ranges + 4));
-    rect = malloc (sizeof (GRADIENT_RECT) * (num_rects*num_ranges + 2));
+    vert = _cairo_malloc (sizeof (TRIVERTEX) * (num_rects*2*num_ranges + 4));
+    rect = _cairo_malloc (sizeof (GRADIENT_RECT) * (num_rects*num_ranges + 2));
 
     for (i = 0; i < num_ranges*num_rects; i++) {
 	vert[i*2].y = (LONG) clip.top;
@@ -1825,7 +1825,7 @@ cairo_win32_printing_surface_create (HDC
     cairo_surface_t *paginated;
     RECT rect;
 
-    surface = malloc (sizeof (cairo_win32_printing_surface_t));
+    surface = _cairo_malloc (sizeof (cairo_win32_printing_surface_t));
     if (surface == NULL)
 	return _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));
 
