From 7774c1097993bc3ce9f0ac4b722a32bf7d6871c8 Mon Sep 17 00:00:00 2001
From: Jordan Tucker <jordanbtucker@gmail.com>
Date: Thu, 15 Dec 2022 21:16:27 -0600
Subject: [PATCH] fix: add __proto__ to objects and arrays

[msikka: Backported to mozjs 102.12.0]
Signed-off-by: Mukul Sikka <mukul.sikka@broadcom.com>

---
 devtools/shared/storage/vendor/json5.js | 41 ++++++++++++++++++++-----
 1 file changed, 34 insertions(+), 7 deletions(-)

diff --git a/devtools/shared/storage/vendor/json5.js b/devtools/shared/storage/vendor/json5.js
index 2e61c98ed0..62fe2876ba 100644
--- a/devtools/shared/storage/vendor/json5.js
+++ b/devtools/shared/storage/vendor/json5.js
@@ -388,12 +388,34 @@
   function internalize (holder, name, reviver) {
       var value = holder[name];
       if (value != null && typeof value === 'object') {
-          for (var key in value) {
-              var replacement = internalize(value, key, reviver);
-              if (replacement === undefined) {
-                  delete value[key];
-              } else {
-                  value[key] = replacement;
+        if (Array.isArray(value)) {
+            for (let i = 0; i < value.length; i++) {
+                const key = String(i)
+                const replacement = internalize(value, key, reviver)
+                if (replacement === undefined) {
+                    delete value[key]
+                } else {
+                    Object.defineProperty(value, key, {
+                        value: replacement,
+                        writable: true,
+                        enumerable: true,
+                        configurable: true,
+                    })
+                }
+            }
+        } else {
+            for (const key in value) {
+                const replacement = internalize(value, key, reviver)
+                if (replacement === undefined) {
+                    delete value[key]
+                } else {
+                    Object.defineProperty(value, key, {
+                        value: replacement,
+                        writable: true,
+                        enumerable: true,
+                        configurable: true,
+                    })
+                }
               }
           }
       }
@@ -1321,7 +1343,12 @@
           if (Array.isArray(parent)) {
               parent.push(value);
           } else {
-              parent[key] = value;
+            Object.defineProperty(parent, key, {
+                value,
+                writable: true,
+                enumerable: true,
+                configurable: true,
+            })
           }
       }
 
-- 
2.40.4

