From 3270021820ff6ac7a6d77b77fe69777129937994 Mon Sep 17 00:00:00 2001
From: Ethan A Merritt <merritt@u.washington.edu>
Date: Wed, 12 Mar 2025 19:56:13 -0700
Subject: [PATCH] check valid range on time value before trying to format it

Absurdly large time values (number of seconds) cause failures in the
routines that populate a time structure and format the result.
The program does complain about an invalid time value but only
after the failures have already occurred.
E.g.
	print strftime("%Y", 1.e14)

Now a check for fabs(time) > 1.e12 is the first thing in f_strftime().

Bug 2779
---
 src/internal.c | 49 ++++++++++++++++++++++++++++---------------------
 1 file changed, 28 insertions(+), 21 deletions(-)

diff --git a/src/internal.c b/src/internal.c
index 53be8d409..2d8812e49 100644
--- a/src/internal.c
+++ b/src/internal.c
@@ -1905,30 +1905,37 @@ f_strftime(union argument *arg)
 	int_error(NO_CARET,
 		  "First parameter to strftime must be a format string");
 
-    /* Prepare format string.
-     * Make sure the resulting string not empty by adding a space.
-     * Otherwise, the return value of gstrftime doesn't give enough
-     * information.
-     */
-    fmtlen = strlen(fmt.v.string_val) + 1;
-    fmtstr = gp_alloc(fmtlen + 1, "f_strftime: fmt");
-    strncpy(fmtstr, fmt.v.string_val, fmtlen);
-    strncat(fmtstr, " ", fmtlen);
-    buflen = 80 + 2*fmtlen;
-    buffer = gp_alloc(buflen, "f_strftime: buffer");
-
-    /* Get time_str */
-    length = gstrftime(buffer, buflen, fmtstr, real(&val));
-    if (length == 0 || length >= buflen)
-	int_error(NO_CARET, "String produced by time format is too long");
-
-    /* Remove trailing space */
-    assert(buffer[length-1] == ' ');
-    buffer[length-1] = NUL;
+    /* Range check */
+    if (!(fabs(real(&val)) < 1.e12)) {
+	int_warn(NO_CARET, "time value out of range");
+	buffer = strdup("    ");
+
+    } else {
+	/* Prepare format string.
+	 * Make sure the resulting string not empty by adding a space.
+	 * Otherwise, the return value of gstrftime doesn't give enough
+	 * information.
+	 */
+	fmtlen = strlen(fmt.v.string_val) + 1;
+	fmtstr = gp_alloc(fmtlen + 1, "f_strftime: fmt");
+	strncpy(fmtstr, fmt.v.string_val, fmtlen);
+	strncat(fmtstr, " ", fmtlen);
+	buflen = 80 + 2*fmtlen;
+	buffer = gp_alloc(buflen, "f_strftime: buffer");
+
+	/* Get time_str */
+	length = gstrftime(buffer, buflen, fmtstr, real(&val));
+	if (length == 0 || length >= buflen)
+	    int_error(NO_CARET, "String produced by time format is too long");
+
+	/* Remove trailing space */
+	assert(buffer[length-1] == ' ');
+	buffer[length-1] = NUL;
+	free(fmtstr);
+    }
 
     gpfree_string(&val);
     gpfree_string(&fmt);
-    free(fmtstr);
 
     push(Gstring(&val, buffer));
     free(buffer);
-- 
2.40.0

