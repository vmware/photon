diff -ru krb5-1.14/src/lib/rpc/bindresvport.c krb5-1.14-new/src/lib/rpc/bindresvport.c
--- krb5-1.14/src/lib/rpc/bindresvport.c	2015-11-20 12:28:42.000000000 -0800
+++ krb5-1.14-new/src/lib/rpc/bindresvport.c	2016-03-18 18:20:21.088829743 -0700
@@ -32,6 +32,8 @@
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+#include <stdio.h>
+#include <ctype.h>
 #include <string.h>
 #include <stdlib.h>
 #include <stdint.h>
@@ -44,6 +46,85 @@
 #include <errno.h>
 #include "socket-utils.h"
 
+#define STARTPORT 600
+#define ENDPORT (IPPORT_RESERVED - 1)
+#define NPORTS	(ENDPORT - STARTPORT + 1)
+#define LOWPORT 512
+
+/*
+ * Read the file /etc/bindresvport.blacklist, so that we don't bind
+ * to this ports.
+ */
+
+static int blacklist_read;
+static int *list;
+static int list_size = 0;
+
+static void
+load_blacklist (void)
+{
+  FILE *fp;
+  char *buf = NULL;
+  size_t buflen = 0;
+  int size = 0, ptr = 0;
+
+  blacklist_read = 1;
+
+  fp = fopen ("/etc/bindresvport.blacklist", "r");
+  if (NULL == fp)
+    return;
+
+  while (!feof_unlocked (fp))
+    {
+      unsigned long port;
+      char *tmp, *cp;
+      ssize_t n = getline (&buf, &buflen, fp);
+      if (n < 1)
+        break;
+
+      cp = buf;
+      tmp = strchr (cp, '#');  /* remove comments */
+      if (tmp)
+        *tmp = '\0';
+      while (isspace ((int)*cp))    /* remove spaces and tabs */
+        ++cp;
+      if (*cp == '\0')        /* ignore empty lines */
+        continue;
+      if (cp[strlen (cp) - 1] == '\n')
+        cp[strlen (cp) - 1] = '\0';
+
+      port = strtoul (cp, &tmp, 0);
+      while (isspace(*tmp))
+        ++tmp;
+      if (*tmp != '\0' || (port == ULONG_MAX && errno == ERANGE))
+	continue;
+
+      /* Don't bother with out-of-range ports */
+      if (port < LOWPORT || port > ENDPORT)
+        continue;
+
+      if (ptr >= size)
+	{
+	  size += 10;
+	  list = realloc (list, size * sizeof (int));
+	  if (list == NULL)
+	    {
+	      free (buf);
+	      return;
+	    }
+	}
+
+      list[ptr++] = port;
+    }
+
+  fclose (fp);
+
+  if (buf)
+    free (buf);
+
+  list_size = ptr;
+}
+
 /*
  * Bind a socket to a privileged IP port
  */
@@ -56,9 +137,10 @@
 	socklen_t salen;
 	int i;
 
-#define STARTPORT 600
-#define ENDPORT (IPPORT_RESERVED - 1)
-#define NPORTS	(ENDPORT - STARTPORT + 1)
+        if (!blacklist_read) {
+                load_blacklist ();
+        }
+
 	if (sa == NULL) {
 		salen = sizeof(myaddr);
 		sa = ss2sa(&myaddr);
@@ -76,11 +158,21 @@
 	res = -1;
 	errno = EADDRINUSE;
 	for (i = 0; i < NPORTS && res < 0 && errno == EADDRINUSE; i++) {
-		sa_setport(sa, port++);
-		if (port > ENDPORT) {
+                int j;
+                
+		sa_setport(sa, port);
+                /* Check, if this port is not blacklisted.  */
+                for (j = 0; j < list_size; j++) {
+	                if (port == list[j]) {
+	                        goto try_next_port;
+                        }
+                }
+		res = bind(sd, sa, sa_socklen(sa));
+
+try_next_port:                
+                if (++port > ENDPORT) {
 			port = STARTPORT;
 		}
-		res = bind(sd, sa, sa_socklen(sa));
 	}
 	return (res);
 }
Only in krb5-1.14-new/src/lib/rpc: bindresvport.c~
