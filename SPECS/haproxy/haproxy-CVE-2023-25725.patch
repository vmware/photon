diff --git a/src/h1.c b/src/h1.c
index bf546b9..e726e88 100644
--- a/src/h1.c
+++ b/src/h1.c
@@ -731,6 +731,10 @@ int h1_headers_to_hdr_list(char *start, const char *stop,
 
 		if (likely(*ptr == ':')) {
 			col = ptr - start;
+			if (col <= sol) {
+				state = H1_MSG_HDR_NAME;
+				goto http_msg_invalid;
+			}
 			EAT_AND_JUMP_OR_RETURN(ptr, end, http_msg_hdr_l1_sp, http_msg_ood, state, H1_MSG_HDR_L1_SP);
 		}
 
diff --git a/src/hpack-dec.c b/src/hpack-dec.c
index 6e4a8b7..f26bb88 100644
--- a/src/hpack-dec.c
+++ b/src/hpack-dec.c
@@ -419,6 +419,15 @@ int hpack_decode_frame(struct hpack_dht *dht, const uint8_t *raw, uint32_t len,
 			/* <name> and <value> are correctly filled here */
 		}
 
+		/* We must not accept empty header names (forbidden by the spec and used
+		 * as a list termination).
+		 */
+		if (!name.len) {
+			hpack_debug_printf("##ERR@%d##\n", __LINE__);
+			ret = -HPACK_ERR_INVALID_ARGUMENT;
+			goto leave;
+		}
+
 		/* here's what we have here :
 		 *   - name.len > 0
 		 *   - value is filled with either const data or data allocated from tmp
diff --git a/src/qpack-dec.c b/src/qpack-dec.c
index 3ca2eda..64e1555 100644
--- a/src/qpack-dec.c
+++ b/src/qpack-dec.c
@@ -389,6 +389,14 @@ int qpack_decode_fs(const unsigned char *raw, size_t len, struct buffer *tmp,
 		}
 		qpack_debug_printf(stderr, "\n");
 	}
+	/* We must not accept empty header names (forbidden by the spec and used
+	 * as a list termination).
+	 */
+	if (!name.len) {
+		qpack_debug_printf(stderr, "##ERR@%d\n", __LINE__);
+		ret = -QPACK_DECOMPRESSION_FAILED;
+		goto out;
+	}
 
 	/* put an end marker */
 	list[hdr_idx].n = list[hdr_idx].v = IST_NULL;
