diff -ru gobject-introspection-1.52.1/tests/repository/gitypelibtest.c gobject-introspection-1.52.1-modified/tests/repository/gitypelibtest.c
--- gobject-introspection-1.52.1/tests/repository/gitypelibtest.c	2014-08-13 06:30:30.000000000 -0700
+++ gobject-introspection-1.52.1-modified/tests/repository/gitypelibtest.c	2017-08-28 16:43:19.957766015 -0700
@@ -157,17 +157,6 @@
 }
 
 static void
-test_fundamental_get_ref_function_pointer (GIRepository * repo)
-{
-  GIObjectInfo *info;
-
-  g_assert (g_irepository_require (repo, "Regress", NULL, 0, NULL));
-  info = g_irepository_find_by_name (repo, "Regress", "TestFundamentalObject");
-  g_object_info_get_ref_function_pointer (info);
-  g_base_info_unref (info);
-}
-
-static void
 test_hash_with_cairo_typelib (GIRepository * repo)
 {
   GIBaseInfo *info;
@@ -232,77 +221,6 @@
   g_base_info_unref (prop_obj);
 }
 
-static void
-test_signal_array_len (GIRepository * repo)
-{
-  GIObjectInfo *testobj_info;
-  GISignalInfo *sig_info;
-  GIArgInfo arg_info;
-  GITypeInfo type_info;
-  int i;
-
-  g_assert (g_irepository_require (repo, "Regress", NULL, 0, NULL));
-  testobj_info = g_irepository_find_by_name (repo, "Regress", "TestObj");
-  g_assert (testobj_info != NULL);
-
-  /* find sig-with-array-len-prop signal */
-  for (i = g_object_info_get_n_signals (testobj_info) - 1; i >= 0; --i)
-    {
-      sig_info = g_object_info_get_signal (testobj_info, i);
-      g_assert (sig_info != NULL);
-      if (strcmp (g_base_info_get_name (sig_info), "sig-with-array-len-prop") == 0)
-        break;
-      g_base_info_unref (sig_info);
-    }
-  g_assert (i >= 0);
-
-  g_assert_cmpint (g_callable_info_get_n_args (sig_info), ==, 2);
-
-  /* verify array argument */
-  g_callable_info_load_arg (sig_info, 0, &arg_info);
-  g_assert_cmpstr (g_base_info_get_name (&arg_info), ==, "arr");
-  g_arg_info_load_type (&arg_info, &type_info);
-  g_assert_cmpint (g_type_info_get_tag (&type_info), ==, GI_TYPE_TAG_ARRAY);
-  g_assert_cmpint (g_type_info_get_array_type (&type_info), ==, GI_ARRAY_TYPE_C);
-  g_assert (!g_type_info_is_zero_terminated (&type_info));
-  g_assert_cmpint (g_type_info_get_array_length (&type_info), ==, 1);
-
-  /* verify array length argument */
-  g_callable_info_load_arg (sig_info, 1, &arg_info);
-  g_assert_cmpstr (g_base_info_get_name (&arg_info), ==, "len");
-
-  g_base_info_unref (sig_info);
-  g_base_info_unref (testobj_info);
-}
-
-static void
-test_instance_transfer_ownership (GIRepository * repo)
-{
-  GIObjectInfo *testobj_info;
-  GIFunctionInfo *func_info;
-  GITransfer transfer;
-
-  g_assert (g_irepository_require (repo, "Regress", NULL, 0, NULL));
-  testobj_info = g_irepository_find_by_name (repo, "Regress", "TestObj");
-  g_assert (testobj_info != NULL);
-
-  func_info = g_object_info_find_method (testobj_info, "instance_method");
-  g_assert (func_info != NULL);
-  transfer = g_callable_info_get_instance_ownership_transfer ((GICallableInfo*) func_info);
-  g_assert_cmpint (GI_TRANSFER_NOTHING, ==, transfer);
-
-  g_base_info_unref (func_info);
-
-  func_info = g_object_info_find_method (testobj_info, "instance_method_full");
-  g_assert (func_info != NULL);
-  transfer = g_callable_info_get_instance_ownership_transfer ((GICallableInfo*) func_info);
-  g_assert_cmpint (GI_TRANSFER_EVERYTHING, ==, transfer);
-
-  g_base_info_unref (func_info);
-
-  g_base_info_unref (testobj_info);
-}
-
 int
 main (int argc, char **argv)
 {
@@ -315,11 +233,8 @@
   test_enum_and_flags_static_methods (repo);
   test_size_of_gvalue (repo);
   test_is_pointer_for_struct_arg (repo);
-  test_fundamental_get_ref_function_pointer (repo);
   test_hash_with_cairo_typelib (repo);
   test_char_types (repo);
-  test_signal_array_len (repo);
-  test_instance_transfer_ownership (repo);
 
   exit (0);
 }
diff -ru gobject-introspection-1.52.1/tests/scanner/Makefile.am gobject-introspection-1.52.1-modified/tests/scanner/Makefile.am
--- gobject-introspection-1.52.1/tests/scanner/Makefile.am	2015-07-01 00:23:55.000000000 -0700
+++ gobject-introspection-1.52.1-modified/tests/scanner/Makefile.am	2017-08-24 16:18:57.714105073 -0700
@@ -89,16 +89,16 @@
 SLetter_1_0_gir_SCANNERFLAGS = $(INTROSPECTION_SCANNER_ARGS) --identifier-prefix=S --c-include="sletter.h" --warn-error
 GIRS += SLetter-1.0.gir
 
-Regress-1.0.gir: $(top_builddir)/Gio-2.0.gir Utility-1.0.gir libregress.la
-Regress_1_0_gir_LIBS = libregress.la
-Regress_1_0_gir_CFLAGS = $(libregress_la_CPPFLAGS) $(libregress_la_CFLAGS) -include "glib.h"
-Regress_1_0_gir_INCLUDES = Gio-2.0 Utility-1.0
-if HAVE_CAIRO
-Regress_1_0_gir_INCLUDES += cairo-1.0 
-endif
-Regress_1_0_gir_FILES = $(libregress_la_SOURCES)
-Regress_1_0_gir_SCANNERFLAGS = $(INTROSPECTION_SCANNER_ARGS) --c-include="regress.h" --warn-error
-GIRS += Regress-1.0.gir
+#Regress-1.0.gir: $(top_builddir)/Gio-2.0.gir Utility-1.0.gir libregress.la
+#Regress_1_0_gir_LIBS = libregress.la
+#Regress_1_0_gir_CFLAGS = $(libregress_la_CPPFLAGS) $(libregress_la_CFLAGS) -include "glib.h"
+#Regress_1_0_gir_INCLUDES = Gio-2.0 Utility-1.0
+#if HAVE_CAIRO
+#Regress_1_0_gir_INCLUDES += cairo-1.0 
+#endif
+#Regress_1_0_gir_FILES = $(libregress_la_SOURCES)
+#Regress_1_0_gir_SCANNERFLAGS = $(INTROSPECTION_SCANNER_ARGS) --c-include="regress.h" --warn-error
+#GIRS += Regress-1.0.gir
 
 WarnLib-1.0.gir: $(top_builddir)/Gio-2.0.gir libwarnlib.la
 WarnLib_1_0_gir_LIBS = libwarnlib.la
