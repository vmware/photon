From 88e07717947f5e0d3877fc0b0e563f86b335bc4e Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Wed, 23 Jun 2021 16:26:52 +0530
Subject: [PATCH] Added Photon OS specific customization changes

Photon OS uses it's own method of GOSC with customized set of bash
scripts. This change facilitates that by introducing a new conditional
macro which can be enabled on need basis.

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 open-vm-tools/configure.ac                   |  4 ++
 open-vm-tools/libDeployPkg/linuxDeployment.c | 39 ++++++++++++++++++++
 2 files changed, 43 insertions(+)

diff --git a/open-vm-tools/configure.ac b/open-vm-tools/configure.ac
index 8a7932ec6..390e1eee9 100644
--- a/open-vm-tools/configure.ac
+++ b/open-vm-tools/configure.ac
@@ -1722,6 +1722,10 @@
 AM_CONDITIONAL(ENABLE_SDMP, test "$enable_servicediscovery" = "yes")
 AM_CONDITIONAL(ENABLE_SALTMINION, test "$enable_saltminion" = "yes" -a \( "$arch" = "x64" \) )

+if test "$enable_photon_gosc" = "yes"; then
+   AC_DEFINE([PHOTON_GOSC])
+fi
+
 if test "$have_xsm" != "yes"; then
 AC_DEFINE([NO_XSM], 1, [])
 fi
diff --git a/open-vm-tools/libDeployPkg/linuxDeployment.c b/open-vm-tools/libDeployPkg/linuxDeployment.c
index 063c0b789..fa23bada9 100644
--- a/open-vm-tools/libDeployPkg/linuxDeployment.c
+++ b/open-vm-tools/libDeployPkg/linuxDeployment.c
@@ -686,13 +686,22 @@ GetPackageInfo(const char* packageName,
    close(fd);

    // Create space and copy the command
+#ifndef PHOTON_GOSC
    *command = malloc(VMWAREDEPLOYPKG_CMD_LENGTH);
+#else
+   *command = calloc(VMWAREDEPLOYPKG_CMD_LENGTH + 1, 1);
+#endif /* PHOTON_GOSC */
    if (*command == NULL) {
       SetDeployError("Error allocating memory.");
       return FALSE;
    }

+#ifndef PHOTON_GOSC
    memcpy(*command, hdr.command, VMWAREDEPLOYPKG_CMD_LENGTH);
+#else
+   strncpy(*command, hdr.command, VMWAREDEPLOYPKG_CMD_LENGTH);
+#endif /* PHOTON_GOSC */
+
    *archiveType = hdr.payloadType;
    *flags = hdr.reserved;

@@ -1427,6 +1436,36 @@
       free(command);
       return DEPLOYPKG_STATUS_ERROR;
    } else {
+#ifdef PHOTON_GOSC
+      #define BASH_PATH "/bin/bash"
+      #define SCRIPT_PATH "/usr/share/open-vm-tools/gosc-scripts/customize.sh"
+
+      if (strstr(command, "scripts/Customize.pl") ||
+            strstr(command, "scripts/customize.sh")) {
+
+         char photon_gosc[256] = {0};
+
+         sLog(log_info, "Using Photon OS style of GOSC\n");
+
+         free(command);
+         command = NULL;
+
+         snprintf(photon_gosc, sizeof(photon_gosc),
+               "%s %s %s/cust.cfg", BASH_PATH, SCRIPT_PATH, imcDirPath);
+
+         sLog(log_debug, "Photon GOSC command: %s\n", photon_gosc);
+
+         // The command will be parsed alter and can be of arbitrary length
+         command = strdup(photon_gosc);
+         if (!command) {
+            SetDeployError("Error allocating memory in photon_gosc\n");
+            return DEPLOYPKG_STATUS_ERROR;
+         }
+
+         _DeployPkg_SkipReboot(true);
+      }
+#endif /* PHOTON_GOSC */
+
       sLog(log_info, "Executing traditional GOSC workflow.");
       deploymentResult = ForkExecAndWaitCommand(command, true, NULL, 0);
       free(command);
--
