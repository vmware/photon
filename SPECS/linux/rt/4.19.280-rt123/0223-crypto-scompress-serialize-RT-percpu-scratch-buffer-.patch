From a809ea851d904b0d94aec3699c478455d6c6126b Mon Sep 17 00:00:00 2001
From: Mike Galbraith <efault@gmx.de>
Date: Wed, 11 Jul 2018 17:14:47 +0200
Subject: [PATCH 223/353] crypto: scompress - serialize RT percpu scratch
 buffer access with a local lock

| BUG: sleeping function called from invalid context at kernel/locking/rtmutex.c:974
| in_atomic(): 1, irqs_disabled(): 0, pid: 1401, name: cryptomgr_test
| Preemption disabled at:
| [<ffff00000849941c>] scomp_acomp_comp_decomp+0x34/0x1a0
| CPU: 21 PID: 1401 Comm: cryptomgr_test Tainted: G        W        4.16.18-rt9-rt #1
| Hardware name: www.cavium.com crb-1s/crb-1s, BIOS 0.3 Apr 25 2017
| Call trace:
|  dump_backtrace+0x0/0x1c8
|  show_stack+0x24/0x30
|  dump_stack+0xac/0xe8
|  ___might_sleep+0x124/0x188
|  rt_spin_lock+0x40/0x88
|  zip_load_instr+0x44/0x170 [thunderx_zip]
|  zip_deflate+0x184/0x378 [thunderx_zip]
|  zip_compress+0xb0/0x130 [thunderx_zip]
|  zip_scomp_compress+0x48/0x60 [thunderx_zip]
|  scomp_acomp_comp_decomp+0xd8/0x1a0
|  scomp_acomp_compress+0x24/0x30
|  test_acomp+0x15c/0x558
|  alg_test_comp+0xc0/0x128
|  alg_test.part.6+0x120/0x2c0
|  alg_test+0x6c/0xa0
|  cryptomgr_test+0x50/0x58
|  kthread+0x134/0x138
|  ret_from_fork+0x10/0x18

Mainline disables preemption to serialize percpu scratch buffer access,
causing the splat above.  Serialize with a local lock for RT instead.

Signed-off-by: Mike Galbraith <efault@gmx.de>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 crypto/scompress.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/crypto/scompress.c b/crypto/scompress.c
index 968bbcf65c94..c2f0077e0801 100644
--- a/crypto/scompress.c
+++ b/crypto/scompress.c
@@ -24,6 +24,7 @@
 #include <linux/cryptouser.h>
 #include <net/netlink.h>
 #include <linux/scatterlist.h>
+#include <linux/locallock.h>
 #include <crypto/scatterwalk.h>
 #include <crypto/internal/acompress.h>
 #include <crypto/internal/scompress.h>
@@ -34,6 +35,7 @@ static void * __percpu *scomp_src_scratches;
 static void * __percpu *scomp_dst_scratches;
 static int scomp_scratch_users;
 static DEFINE_MUTEX(scomp_lock);
+static DEFINE_LOCAL_IRQ_LOCK(scomp_scratches_lock);
 
 #ifdef CONFIG_NET
 static int crypto_scomp_report(struct sk_buff *skb, struct crypto_alg *alg)
@@ -146,7 +148,7 @@ static int scomp_acomp_comp_decomp(struct acomp_req *req, int dir)
 	void **tfm_ctx = acomp_tfm_ctx(tfm);
 	struct crypto_scomp *scomp = *tfm_ctx;
 	void **ctx = acomp_request_ctx(req);
-	const int cpu = get_cpu();
+	const int cpu = local_lock_cpu(scomp_scratches_lock);
 	u8 *scratch_src = *per_cpu_ptr(scomp_src_scratches, cpu);
 	u8 *scratch_dst = *per_cpu_ptr(scomp_dst_scratches, cpu);
 	int ret;
@@ -181,7 +183,7 @@ static int scomp_acomp_comp_decomp(struct acomp_req *req, int dir)
 					 1);
 	}
 out:
-	put_cpu();
+	local_unlock_cpu(scomp_scratches_lock);
 	return ret;
 }
 
-- 
2.40.0

