From 38a7ae34b1e3fe6b13b4a49ecdecfc308335496c Mon Sep 17 00:00:00 2001
From: Alexey Makhalov <amakhalov@vmware.com>
Date: Thu, 16 Dec 2021 00:37:23 +0000
Subject: [PATCH] scsi: vmw_pvscsi: Set residual data length conditionally

PVSCSI implementation in VMware hypervisor under specific configuration
("SCSI Bus Sharing" set to "Physical") returns zero dataLen in completion
descriptor for read_capacity_16.
PVSCSI implementation in QEMU does not set dataLen at all keeping it zeroed
as was reported by Shmulik Ladkani.

Commit e662502b3a78 ("scsi: vmw_pvscsi: Set correct residual data length")
sets residual length unconditionally causing scsi_lib layer to erase the
useful payload beyond dataLen. It makes sense when controller returns the
garbage at the end of buffer. See commit bdb2b8cab439 ("[SCSI] erase invalid
data returned by device") for details.

Considering existing issues in implementations of PVSCSI controllers, we
do not want to call scsi_set_resid() when dataLen == 0. Calling scsi_set_resid()
has no effect if dataLen equals buffer length.

Fixes: e662502b3a78 ("scsi: vmw_pvscsi: Set correct residual data length")
Suggested-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
Link: https://lists.gnu.org/archive/html/qemu-devel/2021-08/msg03915.html
Cc: Matt Wang <wwentao@vmware.com>
Cc: Martin K. Petersen <martin.petersen@oracle.com>
Cc: Vishal Bhakta <vbhakta@vmware.com>
Cc: VMware PV-Drivers <pv-drivers@vmware.com>
Cc: James E.J. Bottomley <jejb@linux.ibm.com>
Cc: linux-scsi@vger.kernel.org
Cc: stable@vger.kernel.org
Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
---
 drivers/scsi/vmw_pvscsi.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/scsi/vmw_pvscsi.c b/drivers/scsi/vmw_pvscsi.c
index ce1ba1b93..9419d6d1d 100644
--- a/drivers/scsi/vmw_pvscsi.c
+++ b/drivers/scsi/vmw_pvscsi.c
@@ -586,9 +586,12 @@ static void pvscsi_complete_request(struct pvscsi_adapter *adapter,
 			 * Commands like INQUIRY may transfer less data than
 			 * requested by the initiator via bufflen. Set residual
 			 * count to make upper layer aware of the actual amount
-			 * of data returned.
+			 * of data returned. There are cases when controller
+			 * returns zero dataLen with non zero data - do not set
+			 * residual count in that case.
 			 */
-			scsi_set_resid(cmd, scsi_bufflen(cmd) - e->dataLen);
+			if (e->dataLen && (e->dataLen < scsi_bufflen(cmd)))
+				scsi_set_resid(cmd, scsi_bufflen(cmd) - e->dataLen);
 			cmd->result = (DID_OK << 16);
 			break;
 
-- 
2.30.0

