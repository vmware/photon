From c774b5b0a28147771ed7a24d5cc0d38d7cf6ec9a Mon Sep 17 00:00:00 2001
From: Ajay Kaher <ajay.kaher@broadcom.com>
Date: Wed, 13 Nov 2024 16:18:22 +0000
Subject: [PATCH] initialize MMCONFIG, if already not initialized

For CRX, guest needs to initialize MMCONFIG.

Signed-off-by: Ajay Kaher <akaher@vmware.com>
Signed-off-by: Bo Gan <ganb@vmware.com>
---
 arch/x86/pci/mmconfig-shared.c | 41 ++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

diff --git a/arch/x86/pci/mmconfig-shared.c b/arch/x86/pci/mmconfig-shared.c
index 39255f0..5c2f7df 100644
--- a/arch/x86/pci/mmconfig-shared.c
+++ b/arch/x86/pci/mmconfig-shared.c
@@ -25,6 +25,7 @@
 #include <asm/e820/api.h>
 #include <asm/pci_x86.h>
 #include <asm/acpi.h>
+#include <asm/hypervisor.h>
 
 /* Indicate if the ECAM resources have been placed into the resource table */
 static bool pci_mmcfg_running_state;
@@ -572,6 +573,9 @@ static bool __ref pci_mmcfg_reserved(struct device *dev,
 		}
 	}
 
+	if(cfg->res.flags & IORESOURCE_BUSY)
+		return true;
+
 	/*
 	 * e820__mapped_all() is marked as __init.
 	 * All entries from ACPI MCFG table have been checked at boot time.
@@ -711,6 +715,43 @@ static void __init __pci_mmcfg_init(int early)
 
 static int __initdata known_bridge;
 
+#define PCI_REG_MMCONFIG 0xc4
+#define VMW_EXTCFG_MMCFG_SIZE (128 << 20)
+
+int __init pci_mmcfg_self_init(void)
+{
+	u32 mm_config = 0x0;
+	struct pci_mmcfg_region *cfg;
+
+	if (x86_hyper_type != X86_HYPER_VMWARE)
+		return 0;
+
+	/* Read current MMCONFIG address from chipset */
+	if (pci_direct_conf1.read(0, 0, 0, PCI_REG_MMCONFIG, 4,
+					&mm_config) < 0)
+		return -EINVAL;
+
+	if(!mm_config) {
+		mm_config = 0xe0000000;
+
+                if (pci_direct_conf1.write(0, 0, 0, PCI_REG_MMCONFIG, 4,
+                                        mm_config | 0x3 ) < 0) {
+                        return -EINVAL;
+                }
+
+		cfg = pci_mmconfig_add(0, 0x0, 0x7f, mm_config);
+		if (cfg == NULL) {
+			return -ENOMEM;
+		}
+                __pci_mmcfg_init(0);
+
+		if (!cfg->res.parent)
+			insert_resource(&iomem_resource, &cfg->res);
+	}
+	return 0;
+}
+subsys_initcall(pci_mmcfg_self_init);
+
 void __init pci_mmcfg_early_init(void)
 {
 	pr_debug("%s() pci_probe %#x\n", __func__, pci_probe);
-- 
2.39.0

