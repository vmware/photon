From ecfcabd03d5510315d562855d9df078d30c93dff Mon Sep 17 00:00:00 2001
From: Ajay Kaher <ajay.kaher@broadcom.com>
Date: Thu, 23 Jan 2025 10:37:56 +0000
Subject: [PATCH] vmware only

skip rdrand if CONFIG_HYPERVISOR_GUEST enabled.

Signed-off-by: Bo Gan <ganb@vmware.com>
---
 arch/x86/kernel/cpu/Makefile | 5 +++++
 arch/x86/kernel/cpu/common.c | 3 +++
 arch/x86/kernel/cpu/vmware.c | 5 +++++
 3 files changed, 13 insertions(+)

diff --git a/arch/x86/kernel/cpu/Makefile b/arch/x86/kernel/cpu/Makefile
index 5857a0f5d..0541a2be7 100644
--- a/arch/x86/kernel/cpu/Makefile
+++ b/arch/x86/kernel/cpu/Makefile
@@ -20,7 +20,12 @@ KCSAN_SANITIZE_common.o := n
 obj-y			:= cacheinfo.o scattered.o
 obj-y			+= topology_common.o topology_ext.o topology_amd.o
 obj-y			+= common.o
+
+# Trust rdrand on VMware platform
+ifndef CONFIG_HYPERVISOR_GUEST
 obj-y			+= rdrand.o
+endif
+
 obj-y			+= match.o
 obj-y			+= bugs.o
 obj-y			+= aperfmperf.o
diff --git a/arch/x86/kernel/cpu/common.c b/arch/x86/kernel/cpu/common.c
index f43bb974f..31993b128 100644
--- a/arch/x86/kernel/cpu/common.c
+++ b/arch/x86/kernel/cpu/common.c
@@ -1875,7 +1875,10 @@ static void identify_cpu(struct cpuinfo_x86 *c)
 				c->x86, c->x86_model);
 	}
 
+	/* Trust rdrand on VMware platform */
+#ifndef CONFIG_HYPERVISOR_GUEST
 	x86_init_rdrand(c);
+#endif
 	setup_pku(c);
 	setup_cet(c);
 
diff --git a/arch/x86/kernel/cpu/vmware.c b/arch/x86/kernel/cpu/vmware.c
index da937aad2..5197ce66b 100644
--- a/arch/x86/kernel/cpu/vmware.c
+++ b/arch/x86/kernel/cpu/vmware.c
@@ -30,6 +30,7 @@
 #include <linux/static_call.h>
 #include <linux/kmsg_dump.h>
 #include <linux/objtool.h>
+#include <asm/pci_x86.h>
 #include <asm/div64.h>
 #include <asm/x86_init.h>
 #include <asm/hypervisor.h>
@@ -462,6 +463,10 @@ static void __init vmware_platform_setup(void)
 	vmware_set_capabilities();
 
 	kmsg_dump_register(&kmsg_dumper);
+#ifdef CONFIG_PCI
+	/* PCI BIOS service won't work from a PV guest. */
+	pci_probe &= ~PCI_PROBE_BIOS;
+#endif
 }
 #define RETRIES_MAX		3
 #define MESSAGE_STATUS_SUCCESS  0x0001
-- 
2.39.4

