From 0cfeded9e33c985918caa79cd6f8b4497e284875 Mon Sep 17 00:00:00 2001
From: Frank van der Linden <fllinden@amazon.com>
Date: Thu, 9 Dec 2021 20:41:11 +0000
Subject: [PATCH] drivers/base/memory: use MHP_MEMMAP_ON_MEMORY from the probe
 interface

If it is possible to use MHP_MEMMAP_ON_MEMORY from the probe interface,
which should normally be the case, do so.

[Srinidhi Rao <srinidhi.rao@broadcom.com> ported this patch to v6.6.x]

Signed-off-by: Frank van der Linden <fllinden@amazon.com>
---
 drivers/base/memory.c          | 11 +++++++----
 include/linux/memory_hotplug.h |  1 +
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/base/memory.c b/drivers/base/memory.c
index 67858eeb92ed..1e3410ca8b7d 100644
--- a/drivers/base/memory.c
+++ b/drivers/base/memory.c
@@ -550,9 +550,10 @@ static DEVICE_ATTR_RO(crash_hotplug);
 static ssize_t probe_store(struct device *dev, struct device_attribute *attr,
 			   const char *buf, size_t count)
 {
-	u64 phys_addr;
+	u64 phys_addr, size;
 	int nid, ret;
 	unsigned long pages_per_block = PAGES_PER_SECTION * sections_per_block;
+	mhp_t mhp_flags;
 
 	ret = kstrtoull(buf, 0, &phys_addr);
 	if (ret)
@@ -565,10 +566,12 @@ static ssize_t probe_store(struct device *dev, struct device_attribute *attr,
 	if (ret)
 		return ret;
 
+	size = MIN_MEMORY_BLOCK_SIZE * sections_per_block;
+	mhp_flags = mhp_supports_memmap_on_memory() ?
+	    MHP_MEMMAP_ON_MEMORY : MHP_NONE;
+
 	nid = memory_add_physaddr_to_nid(phys_addr);
-	ret = __add_memory(nid, phys_addr,
-			   MIN_MEMORY_BLOCK_SIZE * sections_per_block,
-			   MHP_NONE);
+	ret = __add_memory(nid, phys_addr, size, mhp_flags);
 
 	if (ret)
 		goto out;
diff --git a/include/linux/memory_hotplug.h b/include/linux/memory_hotplug.h
index ebe876930e78..d9769660f04c 100644
--- a/include/linux/memory_hotplug.h
+++ b/include/linux/memory_hotplug.h
@@ -378,6 +378,7 @@ extern struct zone *zone_for_pfn_range(int online_type, int nid,
 extern int arch_create_linear_mapping(int nid, u64 start, u64 size,
 				      struct mhp_params *params);
 void arch_remove_linear_mapping(u64 start, u64 size);
+extern bool mhp_supports_memmap_on_memory(void);
 #endif /* CONFIG_MEMORY_HOTPLUG */
 
 #endif /* __LINUX_MEMORY_HOTPLUG_H */
-- 
2.39.4

