			     BASH PATCH REPORT
			     =================

Bash-Release:	4.3
Patch-ID:	bash43-032

Bug-Reported-by:	crispusfairbairn@gmail.com
Bug-Reference-ID:	<b5e499f7-3b98-408d-9f94-c0387580e73a@googlegroups.com>
Bug-Reference-URL:	http://lists.gnu.org/archive/html/bug-bash/2014-09/msg00013.html

Bug-Description:

When bash is running in Posix mode, it allows signals -- including SIGCHLD --
to interrupt the `wait' builtin, as Posix requires.  However, the interrupt
causes bash to not run a SIGCHLD trap for all exited children.  This patch
fixes the issue and restores the documented behavior in Posix mode.

Patch (apply with `patch -p0'):

*** ../bash-4.3-patched/jobs.c	2014-05-14 09:20:15.000000000 -0400
--- jobs.c	2014-09-09 11:50:38.000000000 -0400
***************
*** 3340,3344 ****
  	{
  	  interrupt_immediately = 0;
! 	  trap_handler (SIGCHLD);	/* set pending_traps[SIGCHLD] */
  	  wait_signal_received = SIGCHLD;
  	  /* If we're in a signal handler, let CHECK_WAIT_INTR pick it up;
--- 3346,3352 ----
  	{
  	  interrupt_immediately = 0;
! 	  /* This was trap_handler (SIGCHLD) but that can lose traps if
! 	     children_exited > 1 */
! 	  queue_sigchld_trap (children_exited);
  	  wait_signal_received = SIGCHLD;
  	  /* If we're in a signal handler, let CHECK_WAIT_INTR pick it up;
*** ../bash-4.3/patchlevel.h	2012-12-29 10:47:57.000000000 -0500
--- patchlevel.h	2014-03-20 20:01:28.000000000 -0400
***************
*** 26,30 ****
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 31
  
  #endif /* _PATCHLEVEL_H_ */
--- 26,30 ----
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 32
  
  #endif /* _PATCHLEVEL_H_ */
