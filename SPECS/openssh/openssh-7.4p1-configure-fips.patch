diff -rup openssh-7.4p1-fips/cipher.c openssh-7.4p1-fips-enable/cipher.c
--- openssh-7.4p1-fips/cipher.c	2017-02-02 15:51:07.008913721 -0800
+++ openssh-7.4p1-fips-enable/cipher.c	2017-02-08 15:46:35.054737565 -0800
@@ -136,20 +136,6 @@ static const struct sshcipher ciphers[]
 	{ NULL,		SSH_CIPHER_INVALID, 0, 0, 0, 0, 0, 0, NULL }
 };
 
-static const struct sshcipher fips_ciphers[] = {
-	{ "none",	SSH_CIPHER_NONE, 8, 0, 0, 0, 0, 0, EVP_enc_null },
-	{ "3des-cbc",	SSH_CIPHER_SSH2, 8, 24, 0, 0, 0, 1, EVP_des_ede3_cbc },
-	{ "aes128-cbc",	SSH_CIPHER_SSH2, 16, 16, 0, 0, 0, 1, EVP_aes_128_cbc },
-	{ "aes192-cbc",	SSH_CIPHER_SSH2, 16, 24, 0, 0, 0, 1, EVP_aes_192_cbc },
-	{ "aes256-cbc",	SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 1, EVP_aes_256_cbc },
-	{ "rijndael-cbc@lysator.liu.se",
-			SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 1, EVP_aes_256_cbc },
-	{ "aes128-ctr",	SSH_CIPHER_SSH2, 16, 16, 0, 0, 0, 0, EVP_aes_128_ctr },
-	{ "aes192-ctr",	SSH_CIPHER_SSH2, 16, 24, 0, 0, 0, 0, EVP_aes_192_ctr },
-	{ "aes256-ctr",	SSH_CIPHER_SSH2, 16, 32, 0, 0, 0, 0, EVP_aes_256_ctr },
-	{ NULL,		SSH_CIPHER_INVALID, 0, 0, 0, 0, 0, 0, NULL }
-};
-
 /*--*/
 
 /* Returns a comma-separated list of supported ciphers. */
@@ -160,7 +146,7 @@ cipher_alg_list(char sep, int auth_only)
 	size_t nlen, rlen = 0;
 	const struct sshcipher *c;
 
-	for (c = FIPS_mode() ? fips_ciphers : ciphers; c->name != NULL; c++) {
+	for (c = ciphers; c->name != NULL; c++) {
 		if (c->number != SSH_CIPHER_SSH2)
 			continue;
 		if (auth_only && c->auth_len == 0)
@@ -256,7 +242,7 @@ const struct sshcipher *
 cipher_by_name(const char *name)
 {
 	const struct sshcipher *c;
-	for (c = FIPS_mode() ? fips_ciphers : ciphers; c->name != NULL; c++)
+	for (c = ciphers; c->name != NULL; c++)
 		if (strcmp(c->name, name) == 0)
 			return c;
 	return NULL;
@@ -266,7 +252,7 @@ const struct sshcipher *
 cipher_by_number(int id)
 {
 	const struct sshcipher *c;
-	for (c = FIPS_mode() ? fips_ciphers : ciphers; c->name != NULL; c++)
+	for (c = ciphers; c->name != NULL; c++)
 		if (c->number == id)
 			return c;
 	return NULL;
@@ -307,7 +293,7 @@ cipher_number(const char *name)
 	const struct sshcipher *c;
 	if (name == NULL)
 		return -1;
-	for (c = FIPS_mode() ? fips_ciphers : ciphers; c->name != NULL; c++)
+	for (c = ciphers; c->name != NULL; c++)
 		if (strcasecmp(c->name, name) == 0)
 			return c->number;
 	return -1;
diff -rup openssh-7.4p1-fips/cipher-ctr.c openssh-7.4p1-fips-enable/cipher-ctr.c
--- openssh-7.4p1-fips/cipher-ctr.c	2017-02-02 15:47:44.252918302 -0800
+++ openssh-7.4p1-fips-enable/cipher-ctr.c	2017-02-08 15:46:35.054737565 -0800
@@ -138,8 +138,7 @@ evp_aes_128_ctr(void)
 	aes_ctr.do_cipher = ssh_aes_ctr;
 #ifndef SSH_OLD_EVP
 	aes_ctr.flags = EVP_CIPH_CBC_MODE | EVP_CIPH_VARIABLE_LENGTH |
-	    EVP_CIPH_ALWAYS_CALL_INIT | EVP_CIPH_CUSTOM_IV |
-	    EVP_CIPH_FLAG_FIPS;
+	    EVP_CIPH_ALWAYS_CALL_INIT | EVP_CIPH_CUSTOM_IV;
 #endif
 	return (&aes_ctr);
 }
diff -rup openssh-7.4p1-fips/dh.h openssh-7.4p1-fips-enable/dh.h
--- openssh-7.4p1-fips/dh.h	2017-02-02 15:52:37.552911676 -0800
+++ openssh-7.4p1-fips-enable/dh.h	2017-02-08 15:46:35.054737565 -0800
@@ -51,7 +51,6 @@ u_int	 dh_estimate(int);
  * Miniumum increased in light of DH precomputation attacks.
  */
 #define DH_GRP_MIN	2048
-#define DH_GRP_MIN_FIPS	2048
 #define DH_GRP_MAX	8192
 
 /*
diff -rup openssh-7.4p1-fips/entropy.c openssh-7.4p1-fips-enable/entropy.c
--- openssh-7.4p1-fips/entropy.c	2017-02-02 15:53:46.088910128 -0800
+++ openssh-7.4p1-fips-enable/entropy.c	2017-02-08 15:46:35.054737565 -0800
@@ -217,9 +217,6 @@ seed_rng(void)
 		fatal("OpenSSL version mismatch. Built against %lx, you "
 		    "have %lx", (u_long)OPENSSL_VERSION_NUMBER, SSLeay());
 
-	/* clean the PRNG status when exiting the program */
-	atexit(RAND_cleanup);
-
 #ifndef OPENSSL_PRNG_ONLY
 	if (RAND_status() == 1) {
 		debug3("RNG is ready, skipping seeding");
diff -rup openssh-7.4p1-fips/kex.c openssh-7.4p1-fips-enable/kex.c
--- openssh-7.4p1-fips/kex.c	2017-02-02 16:06:13.120893252 -0800
+++ openssh-7.4p1-fips-enable/kex.c	2017-02-08 15:46:35.058737565 -0800
@@ -114,23 +114,6 @@ static const struct kexalg kexalgs[] = {
 	{ NULL, -1, -1, -1},
 };
 
-static const struct kexalg kexalgs_fips[] = {
-#ifdef HAVE_EVP_SHA256
-	{ KEX_DHGEX_SHA256, KEX_DH_GEX_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif
-#ifdef OPENSSL_HAS_ECC
-	{ KEX_ECDH_SHA2_NISTP256, KEX_ECDH_SHA2,
-	    NID_X9_62_prime256v1, SSH_DIGEST_SHA256 },
-	{ KEX_ECDH_SHA2_NISTP384, KEX_ECDH_SHA2, NID_secp384r1,
-	    SSH_DIGEST_SHA384 },
-# ifdef OPENSSL_HAS_NISTP521
-	{ KEX_ECDH_SHA2_NISTP521, KEX_ECDH_SHA2, NID_secp521r1,
-	    SSH_DIGEST_SHA512 },
-# endif
-#endif
-	{ NULL, -1, -1, -1},
-};
-
 char *
 kex_alg_list(char sep)
 {
@@ -138,7 +121,7 @@ kex_alg_list(char sep)
 	size_t nlen, rlen = 0;
 	const struct kexalg *k;
 
-	for (k = (FIPS_mode() ? kexalgs_fips : kexalgs); k->name != NULL; k++) {
+	for (k = kexalgs; k->name != NULL; k++) {
 		if (ret != NULL)
 			ret[rlen++] = sep;
 		nlen = strlen(k->name);
@@ -158,7 +141,7 @@ kex_alg_by_name(const char *name)
 {
 	const struct kexalg *k;
 
-	for (k = (FIPS_mode() ? kexalgs_fips : kexalgs); k->name != NULL; k++) {
+	for (k = kexalgs; k->name != NULL; k++) {
 		if (strcmp(k->name, name) == 0)
 			return k;
 	}
@@ -178,10 +161,7 @@ kex_names_valid(const char *names)
 	for ((p = strsep(&cp, ",")); p && *p != '\0';
 	    (p = strsep(&cp, ","))) {
 		if (kex_alg_by_name(p) == NULL) {
-			if (FIPS_mode())
-				error("\"%.100s\" is not allowed in FIPS mode", p);
-			else
-				error("Unsupported KEX algorithm \"%.100s\"", p);
+			error("Unsupported KEX algorithm \"%.100s\"", p);
 			free(s);
 			return 0;
 		}
diff -rup openssh-7.4p1-fips/kexgexc.c openssh-7.4p1-fips-enable/kexgexc.c
--- openssh-7.4p1-fips/kexgexc.c	2017-02-02 16:10:36.604887300 -0800
+++ openssh-7.4p1-fips-enable/kexgexc.c	2017-02-08 15:46:35.058737565 -0800
@@ -63,7 +63,7 @@ kexgex_client(struct ssh *ssh)
 
 	nbits = dh_estimate(kex->dh_need * 8);
 
-	kex->min = FIPS_mode() ? DH_GRP_MIN_FIPS : DH_GRP_MIN;
+	kex->min = DH_GRP_MIN;
 	kex->max = DH_GRP_MAX;
 	kex->nbits = nbits;
 	if (datafellows & SSH_BUG_DHGEX_LARGE)
diff -rup openssh-7.4p1-fips/kexgexs.c openssh-7.4p1-fips-enable/kexgexs.c
--- openssh-7.4p1-fips/kexgexs.c	2017-02-02 16:11:31.404886062 -0800
+++ openssh-7.4p1-fips-enable/kexgexs.c	2017-02-08 15:46:35.058737565 -0800
@@ -83,9 +83,9 @@ input_kex_dh_gex_request(int type, u_int
 	kex->nbits = nbits;
 	kex->min = min;
 	kex->max = max;
-	min = MAXIMUM(FIPS_mode() ? DH_GRP_MIN_FIPS : DH_GRP_MIN, min);
+	min = MAXIMUM(DH_GRP_MIN, min);
 	max = MINIMUM(DH_GRP_MAX, max);
-	nbits = MAXIMUM(FIPS_mode() ? DH_GRP_MIN_FIPS : DH_GRP_MIN, nbits);
+	nbits = MAXIMUM(DH_GRP_MIN, nbits);
 	nbits = MINIMUM(DH_GRP_MAX, nbits);
 
 	if (kex->max < kex->min || kex->nbits < kex->min ||
diff -rup openssh-7.4p1-fips/mac.c openssh-7.4p1-fips-enable/mac.c
--- openssh-7.4p1-fips/mac.c	2017-02-02 16:13:56.932882775 -0800
+++ openssh-7.4p1-fips-enable/mac.c	2017-02-08 15:46:35.058737565 -0800
@@ -54,7 +54,7 @@ struct macalg {
 	int		etm;		/* Encrypt-then-MAC */
 };
 
-static const struct macalg all_macs[] = {
+static const struct macalg macs[] = {
 	/* Encrypt-and-MAC (encrypt-and-authenticate) variants */
 	{ "hmac-sha1",				SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 0 },
 	{ "hmac-sha1-96",			SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 0 },
@@ -89,24 +89,6 @@ static const struct macalg all_macs[] =
 	{ NULL,					0, 0, 0, 0, 0, 0 }
 };
 
-static const struct macalg fips_macs[] = {
-	/* Encrypt-and-MAC (encrypt-and-authenticate) variants */
-	{ "hmac-sha1",				SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 0 },
-#ifdef HAVE_EVP_SHA256
-	{ "hmac-sha2-256",			SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 0 },
-	{ "hmac-sha2-512",			SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 0 },
-#endif
-
-	/* Encrypt-then-MAC variants */
-	{ "hmac-sha1-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 1 },
-#ifdef HAVE_EVP_SHA256
-	{ "hmac-sha2-256-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 1 },
-	{ "hmac-sha2-512-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 1 },
-#endif
-
-	{ NULL,					0, 0, 0, 0, 0, 0 }
-};
-
 /* Returns a list of supported MACs separated by the specified char. */
 char *
 mac_alg_list(char sep)
@@ -115,7 +97,7 @@ mac_alg_list(char sep)
 	size_t nlen, rlen = 0;
 	const struct macalg *m;
 
-	for (m = FIPS_mode() ? fips_macs : all_macs; m->name != NULL; m++) {
+	for (m = macs; m->name != NULL; m++) {
 		if (ret != NULL)
 			ret[rlen++] = sep;
 		nlen = strlen(m->name);
@@ -154,7 +136,7 @@ mac_setup(struct sshmac *mac, char *name
 {
 	const struct macalg *m;
 
-	for (m = FIPS_mode() ? fips_macs : all_macs; m->name != NULL; m++) {
+	for (m = macs; m->name != NULL; m++) {
 		if (strcmp(name, m->name) != 0)
 			continue;
 		if (mac != NULL)
diff -rup openssh-7.4p1-fips/myproposal.h openssh-7.4p1-fips-enable/myproposal.h
--- openssh-7.4p1-fips/myproposal.h	2017-02-02 16:15:40.516880435 -0800
+++ openssh-7.4p1-fips-enable/myproposal.h	2017-02-08 15:46:35.058737565 -0800
@@ -138,26 +138,6 @@
 
 #define KEX_CLIENT_MAC KEX_SERVER_MAC
 
-#define KEX_DEFAULT_KEX_FIPS		\
-	KEX_ECDH_METHODS \
-	KEX_SHA2_METHODS
-#define	KEX_FIPS_ENCRYPT \
-	"aes128-ctr,aes192-ctr,aes256-ctr," \
-	"aes128-cbc,3des-cbc," \
-	"aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se"
-#ifdef HAVE_EVP_SHA256
-#define	KEX_FIPS_MAC \
-	"hmac-sha1," \
-	"hmac-sha2-256," \
-	"hmac-sha2-512," \
-	"hmac-sha1-etm@openssh.com," \
-	"hmac-sha2-256-etm@openssh.com," \
-	"hmac-sha2-512-etm@openssh.com"
-#else
-#define        KEX_FIPS_MAC \
-       "hmac-sha1"
-#endif
-
 #else /* WITH_OPENSSL */
 
 #define KEX_SERVER_KEX		\
diff -rup openssh-7.4p1-fips/openbsd-compat/openssl-compat.h openssh-7.4p1-fips-enable/openbsd-compat/openssl-compat.h
--- openssh-7.4p1-fips/openbsd-compat/openssl-compat.h	2017-02-02 16:17:03.024878571 -0800
+++ openssh-7.4p1-fips-enable/openbsd-compat/openssl-compat.h	2017-02-08 15:46:35.074737564 -0800
@@ -24,7 +24,6 @@
 #include <openssl/evp.h>
 #include <openssl/rsa.h>
 #include <openssl/dsa.h>
-#include <openssl/crypto.h>
 
 int ssh_compatible_openssl(long, long);
 
diff -rup openssh-7.4p1-fips/readconf.c openssh-7.4p1-fips-enable/readconf.c
--- openssh-7.4p1-fips/readconf.c	2017-02-02 16:19:05.624875801 -0800
+++ openssh-7.4p1-fips-enable/readconf.c	2017-02-15 16:06:58.581047396 -0800
@@ -171,7 +171,8 @@ typedef enum {
 	oStreamLocalBindMask, oStreamLocalBindUnlink, oRevokedHostKeys,
 	oFingerprintHash, oUpdateHostkeys, oHostbasedKeyTypes,
 	oPubkeyAcceptedKeyTypes, oProxyJump,
-	oIgnoredUnknownOption, oDeprecated, oUnsupported
+	oIgnoredUnknownOption, oDeprecated, oUnsupported,
+	oFipsMode
 } OpCodes;
 
 /* Textual representations of the tokens. */
@@ -291,6 +292,7 @@ static struct {
 	{ "streamlocalbindunlink", oStreamLocalBindUnlink },
 	{ "revokedhostkeys", oRevokedHostKeys },
 	{ "fingerprinthash", oFingerprintHash },
+	{ "fipsmode", oFipsMode },
 	{ "updatehostkeys", oUpdateHostkeys },
 	{ "hostbasedkeytypes", oHostbasedKeyTypes },
 	{ "pubkeyacceptedkeytypes", oPubkeyAcceptedKeyTypes },
@@ -965,6 +967,10 @@ parse_time:
 		intptr = &options->gss_deleg_creds;
 		goto parse_flag;
 
+        case oFipsMode:
+                intptr = &options->fips_mode;
+                goto parse_flag;
+
 	case oBatchMode:
 		intptr = &options->batch_mode;
 		goto parse_flag;
@@ -1857,6 +1863,7 @@ initialize_options(Options * options)
 	options->update_hostkeys = -1;
 	options->hostbased_key_types = NULL;
 	options->pubkey_key_types = NULL;
+	options->fips_mode = -1;
 }
 
 /*
@@ -2044,12 +2051,17 @@ fill_default_options(Options * options)
 		options->fingerprint_hash = SSH_FP_HASH_DEFAULT;
 	if (options->update_hostkeys == -1)
 		options->update_hostkeys = 0;
-	if (kex_assemble_names((FIPS_mode() ? KEX_FIPS_ENCRYPT
-	        : KEX_CLIENT_ENCRYPT), &options->ciphers) != 0 ||
-	    kex_assemble_names((FIPS_mode() ? KEX_FIPS_MAC
-	        : KEX_CLIENT_MAC), &options->macs) != 0 ||
-	    kex_assemble_names((FIPS_mode() ? KEX_DEFAULT_KEX_FIPS
-	        : KEX_CLIENT_KEX), &options->kex_algorithms) != 0 ||
+
+        if (options->fips_mode == -1)
+                options->fips_mode = 0;
+        /* Call FIPS_mode_set depending on whether fips mode is set or not */
+        if (options->fips_mode)
+                if (!FIPS_mode_set(1))
+                        fatal("FIPS mode could not be set");
+
+	if (kex_assemble_names(KEX_CLIENT_ENCRYPT, &options->ciphers) != 0 ||
+	    kex_assemble_names(KEX_CLIENT_MAC, &options->macs) != 0 ||
+	    kex_assemble_names(KEX_CLIENT_KEX, &options->kex_algorithms) != 0 ||
 	    kex_assemble_names(KEX_DEFAULT_PK_ALG,
 	    &options->hostbased_key_types) != 0 ||
 	    kex_assemble_names(KEX_DEFAULT_PK_ALG,
@@ -2535,6 +2547,7 @@ dump_client_config(Options *o, const cha
 	dump_cfg_fmtint(oVerifyHostKeyDNS, o->verify_host_key_dns);
 	dump_cfg_fmtint(oVisualHostKey, o->visual_host_key);
 	dump_cfg_fmtint(oUpdateHostkeys, o->update_hostkeys);
+	dump_cfg_fmtint(oFipsMode, o->fips_mode);
 
 	/* Integer options */
 	dump_cfg_int(oCanonicalizeMaxDots, o->canonicalize_max_dots);
diff -rup openssh-7.4p1-fips/readconf.h openssh-7.4p1-fips-enable/readconf.h
--- openssh-7.4p1-fips/readconf.h	2017-02-02 15:26:47.432946693 -0800
+++ openssh-7.4p1-fips-enable/readconf.h	2017-02-15 16:06:20.829048249 -0800
@@ -157,6 +157,7 @@ typedef struct {
 	char	*revoked_host_keys;
 
 	int	 fingerprint_hash;
+	int	 fips_mode;
 
 	int	 update_hostkeys; /* one of SSH_UPDATE_HOSTKEYS_* */
 
diff -rup openssh-7.4p1-fips/sandbox-seccomp-filter.c openssh-7.4p1-fips-enable/sandbox-seccomp-filter.c
--- openssh-7.4p1-fips/sandbox-seccomp-filter.c	2017-02-02 16:20:10.104874345 -0800
+++ openssh-7.4p1-fips-enable/sandbox-seccomp-filter.c	2017-02-08 15:46:35.058737565 -0800
@@ -118,9 +118,6 @@ static const struct sock_filter preauth_
 #ifdef __NR_open
 	SC_DENY(open, EACCES),
 #endif
-#ifdef __NR_socket
-	SC_DENY(socket, EACCES),
-#endif	
 #ifdef __NR_openat
 	SC_DENY(openat, EACCES),
 #endif
diff -rup openssh-7.4p1-fips/servconf.c openssh-7.4p1-fips-enable/servconf.c
--- openssh-7.4p1-fips/servconf.c	2017-02-02 16:23:48.132869419 -0800
+++ openssh-7.4p1-fips-enable/servconf.c	2017-02-15 16:00:12.209056576 -0800
@@ -164,6 +164,7 @@ initialize_server_options(ServerOptions
 	options->version_addendum = NULL;
 	options->fingerprint_hash = -1;
 	options->disable_forwarding = -1;
+	options->fips_mode = -1;
 }
 
 /* Returns 1 if a string option is unset or set to "none" or 0 otherwise. */
@@ -176,12 +177,9 @@ option_clear_or_none(const char *o)
 static void
 assemble_algorithms(ServerOptions *o)
 {
-	if (kex_assemble_names((FIPS_mode() ? KEX_FIPS_ENCRYPT
-	        : KEX_SERVER_ENCRYPT), &o->ciphers) != 0 ||
-	    kex_assemble_names((FIPS_mode() ? KEX_FIPS_MAC
-	        : KEX_SERVER_MAC), &o->macs) != 0 ||
-	    kex_assemble_names((FIPS_mode() ? KEX_DEFAULT_KEX_FIPS
-	        : KEX_SERVER_KEX), &o->kex_algorithms) != 0 ||
+	if (kex_assemble_names(KEX_SERVER_ENCRYPT, &o->ciphers) != 0 ||
+	    kex_assemble_names(KEX_SERVER_MAC, &o->macs) != 0 ||
+	    kex_assemble_names(KEX_SERVER_KEX, &o->kex_algorithms) != 0 ||
 	    kex_assemble_names(KEX_DEFAULT_PK_ALG,
 	    &o->hostkeyalgorithms) != 0 ||
 	    kex_assemble_names(KEX_DEFAULT_PK_ALG,
@@ -336,6 +334,13 @@ fill_default_server_options(ServerOption
 		options->fingerprint_hash = SSH_FP_HASH_DEFAULT;
 	if (options->disable_forwarding == -1)
 		options->disable_forwarding = 0;
+	if (options->fips_mode == -1)
+		options->fips_mode = 0;
+
+        /* Call FIPS_mode_set depending on whether fips mode is set or not */
+        if (options->fips_mode)
+                if (!FIPS_mode_set(1))
+                        fatal("FIPS mode could not be set");
 
 	assemble_algorithms(options);
 
@@ -421,7 +426,8 @@ typedef enum {
 	sAuthenticationMethods, sHostKeyAgent, sPermitUserRC,
 	sStreamLocalBindMask, sStreamLocalBindUnlink,
 	sAllowStreamLocalForwarding, sFingerprintHash, sDisableForwarding,
-	sDeprecated, sIgnore, sUnsupported
+	sDeprecated, sIgnore, sUnsupported,
+	sFipsMode
 } ServerOpCodes;
 
 #define SSHCFG_GLOBAL	0x01	/* allowed in main section of sshd_config */
@@ -564,6 +570,7 @@ static struct {
 	{ "allowstreamlocalforwarding", sAllowStreamLocalForwarding, SSHCFG_ALL },
 	{ "fingerprinthash", sFingerprintHash, SSHCFG_GLOBAL },
 	{ "disableforwarding", sDisableForwarding, SSHCFG_ALL },
+	{ "fipsmode", sFipsMode, SSHCFG_GLOBAL },
 	{ NULL, sBadOption, 0 }
 };
 
@@ -1839,6 +1846,10 @@ process_server_config_line(ServerOptions
 			options->fingerprint_hash = value;
 		break;
 
+	case sFipsMode:
+		intptr = &options->fips_mode;
+		goto parse_flag;
+
 	case sDeprecated:
 	case sIgnore:
 	case sUnsupported:
@@ -2280,14 +2291,13 @@ dump_config(ServerOptions *o)
 	dump_cfg_fmtint(sStreamLocalBindUnlink, o->fwd_opts.streamlocal_bind_unlink);
 	dump_cfg_fmtint(sUsePrivilegeSeparation, use_privsep);
 	dump_cfg_fmtint(sFingerprintHash, o->fingerprint_hash);
+	dump_cfg_fmtint(sFipsMode, o->fips_mode);
 
 	/* string arguments */
 	dump_cfg_string(sPidFile, o->pid_file);
 	dump_cfg_string(sXAuthLocation, o->xauth_location);
-	dump_cfg_string(sCiphers, o->ciphers ? o->ciphers : FIPS_mode()
-		? KEX_FIPS_ENCRYPT : KEX_SERVER_ENCRYPT);
-	dump_cfg_string(sMacs, o->macs ? o->macs : FIPS_mode()
-		? KEX_FIPS_MAC : KEX_SERVER_MAC);
+	dump_cfg_string(sCiphers, o->ciphers ? o->ciphers : KEX_SERVER_ENCRYPT);
+	dump_cfg_string(sMacs, o->macs ? o->macs : KEX_SERVER_MAC);
 	dump_cfg_string(sBanner, o->banner);
 	dump_cfg_string(sForceCommand, o->adm_forced_command);
 	dump_cfg_string(sChrootDirectory, o->chroot_directory);
@@ -2302,8 +2312,8 @@ dump_config(ServerOptions *o)
 	dump_cfg_string(sAuthorizedPrincipalsCommand, o->authorized_principals_command);
 	dump_cfg_string(sAuthorizedPrincipalsCommandUser, o->authorized_principals_command_user);
 	dump_cfg_string(sHostKeyAgent, o->host_key_agent);
-	dump_cfg_string(sKexAlgorithms, o->kex_algorithms ? o->kex_algorithms :
-		FIPS_mode() ? KEX_DEFAULT_KEX_FIPS : KEX_SERVER_KEX);
+	dump_cfg_string(sKexAlgorithms,
+	    o->kex_algorithms ? o->kex_algorithms : KEX_SERVER_KEX);
 	dump_cfg_string(sHostbasedAcceptedKeyTypes, o->hostbased_key_types ?
 	    o->hostbased_key_types : KEX_DEFAULT_PK_ALG);
 	dump_cfg_string(sHostKeyAlgorithms, o->hostkeyalgorithms ?
diff -rup openssh-7.4p1-fips/servconf.h openssh-7.4p1-fips-enable/servconf.h
--- openssh-7.4p1-fips/servconf.h	2017-02-08 15:46:03.518738277 -0800
+++ openssh-7.4p1-fips-enable/servconf.h	2017-02-09 16:04:11.872761901 -0800
@@ -189,6 +189,7 @@ typedef struct {
 	char   *auth_methods[MAX_AUTH_METHODS];
 
 	int	fingerprint_hash;
+	int fips_mode;
 }       ServerOptions;
 
 /* Information about the incoming connection as used by Match */
diff -rup openssh-7.4p1-fips/ssh.c openssh-7.4p1-fips-enable/ssh.c
--- openssh-7.4p1-fips/ssh.c	2017-02-02 16:49:00.060835265 -0800
+++ openssh-7.4p1-fips-enable/ssh.c	2017-02-15 15:55:19.965063178 -0800
@@ -609,9 +609,6 @@ main(int ac, char **av)
 	    "ACD:E:F:GI:J:KL:MNO:PQ:R:S:TVw:W:XYy")) != -1) {
 		switch (opt) {
 		case '1':
-			if (FIPS_mode()) {
-				fatal("Protocol 1 not allowed in the FIPS mode.");
-			}		
 			options.protocol = SSH_PROTO_1;
 			break;
 		case '2':
@@ -1025,6 +1022,11 @@ main(int ac, char **av)
 	/* Parse the configuration files */
 	process_config_files(host_arg, pw, 0);
 
+	/* Call FIPS_mode_set depending on whether fips mode is set or not */
+	if (options.fips_mode)
+		if (!FIPS_mode_set(1)) 
+			fatal("FIPS mode could not be set");
+
 	/* Hostname canonicalisation needs a few options filled. */
 	fill_default_options_for_canonicalization(&options);
 
@@ -1177,10 +1179,6 @@ main(int ac, char **av)
 	}
 
 	seed_rng();
- 
-	if (FIPS_mode()) {
-		logit("FIPS mode initialized");
-	}
 
 	if (options.user == NULL)
 		options.user = xstrdup(pw->pw_name);
@@ -1270,12 +1268,6 @@ main(int ac, char **av)
 
 	timeout_ms = options.connection_timeout * 1000;
 
-	if (FIPS_mode()) {
-		options.protocol &= SSH_PROTO_2;
-		if (options.protocol == 0)
-			fatal("Protocol 2 disabled by configuration but required in the FIPS mode.");
-	}
-
 	/* Open a connection to the remote host. */
 	if (ssh_connect(host, addrs, &hostaddr, options.port,
 	    options.address_family, options.connection_attempts,
diff -rup openssh-7.4p1-fips/ssh_config openssh-7.4p1-fips-enable/ssh_config
--- openssh-7.4p1-fips/ssh_config	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/ssh_config	2017-02-15 16:02:38.765053265 -0800
@@ -37,6 +37,7 @@
 #   IdentityFile ~/.ssh/id_ecdsa
 #   IdentityFile ~/.ssh/id_ed25519
 #   Port 22
+#   FipsMode no
 #   Protocol 2
 #   Cipher 3des
 #   Ciphers aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-cbc,3des-cbc
diff -rup openssh-7.4p1-fips/ssh_config.0 openssh-7.4p1-fips-enable/ssh_config.0
--- openssh-7.4p1-fips/ssh_config.0	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/ssh_config.0	2017-02-15 16:03:40.429051872 -0800
@@ -362,6 +362,10 @@ DESCRIPTION
              Specifies the hash algorithm used when displaying key
              fingerprints.  Valid options are: md5 and sha256 (the default).
 
+     FipsMode
+             Enables or disables FIPS mode. Requires FIPS capable ssl modules.
+             The default is no.
+
      ForwardAgent
              Specifies whether the connection to the authentication agent (if
              any) will be forwarded to the remote machine.  The argument must
diff -rup openssh-7.4p1-fips/ssh_config.5 openssh-7.4p1-fips-enable/ssh_config.5
--- openssh-7.4p1-fips/ssh_config.5	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/ssh_config.5	2017-02-15 16:04:14.733051097 -0800
@@ -658,6 +658,10 @@ Valid options are:
 and
 .Cm sha256
 (the default).
+.It Cm FipsMode
+Enables or disables FIPS mode. Requires FIPS capable ssl modules.
+The default is
+.Cm no .
 .It Cm ForwardAgent
 Specifies whether the connection to the authentication agent (if any)
 will be forwarded to the remote machine.
diff -rup openssh-7.4p1-fips/sshd.c openssh-7.4p1-fips-enable/sshd.c
--- openssh-7.4p1-fips/sshd.c	2017-02-02 16:54:20.952828016 -0800
+++ openssh-7.4p1-fips-enable/sshd.c	2017-02-15 15:59:16.101057843 -0800
@@ -1827,10 +1827,6 @@ main(int ac, char **av)
 	/* Reinitialize the log (because of the fork above). */
 	log_init(__progname, options.log_level, options.log_facility, log_stderr);
 
-	if (FIPS_mode()) {
-		logit("FIPS mode initialized");
-	}
-
 	/* Chdir to the root directory so that the current disk can be
 	   unmounted if desired. */
 	if (chdir("/") == -1)
diff -rup openssh-7.4p1-fips/sshd_config openssh-7.4p1-fips-enable/sshd_config
--- openssh-7.4p1-fips/sshd_config	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/sshd_config	2017-02-09 17:38:09.624634543 -0800
@@ -105,6 +105,8 @@ AuthorizedKeysFile	.ssh/authorized_keys
 #ChrootDirectory none
 #VersionAddendum none
 
+#FipsMode no
+
 # no default banner path
 #Banner none
 
diff -rup openssh-7.4p1-fips/sshd_config.0 openssh-7.4p1-fips-enable/sshd_config.0
--- openssh-7.4p1-fips/sshd_config.0	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/sshd_config.0	2017-02-09 17:38:05.524634636 -0800
@@ -331,6 +331,10 @@ DESCRIPTION
              Specifies the hash algorithm used when logging key fingerprints.
              Valid options are: md5 and sha256.  The default is sha256.
 
+     FipsMode
+             Enables or disables FIPS mode. Requires FIPS capable ssl modules.
+             The default is no.
+
      ForceCommand
              Forces the execution of the command specified by ForceCommand,
              ignoring any command supplied by the client and ~/.ssh/rc if
diff -rup openssh-7.4p1-fips/sshd_config.5 openssh-7.4p1-fips-enable/sshd_config.5
--- openssh-7.4p1-fips/sshd_config.5	2017-02-02 15:26:47.436946693 -0800
+++ openssh-7.4p1-fips-enable/sshd_config.5	2017-02-09 17:37:12.200635841 -0800
@@ -578,6 +578,10 @@ and
 .Cm sha256 .
 The default is
 .Cm sha256 .
+.It Cm FipsMode
+Enables or disables FIPS mode. Requires FIPS capable ssl modules.
+The default is 
+.Cm no .
 .It Cm ForceCommand
 Forces the execution of the command specified by
 .Cm ForceCommand ,
Only in openssh-7.4p1-fips-enable: .sshd.c.swp
diff -rup openssh-7.4p1-fips/sshkey.c openssh-7.4p1-fips-enable/sshkey.c
--- openssh-7.4p1-fips/sshkey.c	2017-02-02 17:17:00.576797301 -0800
+++ openssh-7.4p1-fips-enable/sshkey.c	2017-02-08 15:46:35.066737564 -0800
@@ -56,7 +56,6 @@
 #include "digest.h"
 #define SSHKEY_INTERNAL
 #include "sshkey.h"
-#include "log.h"
 #include "match.h"
 
 /* openssh private key file format */
@@ -1528,8 +1527,6 @@ rsa_generate_private_key(u_int bits, RSA
 	}
 	if (!BN_set_word(f4, RSA_F4) ||
 	    !RSA_generate_key_ex(private, bits, f4, NULL)) {
-			if (FIPS_mode())
-				logit("%s: the key length might be unsupported by FIPS mode approved key generation method", __func__);		
 		ret = SSH_ERR_LIBCRYPTO_ERROR;
 		goto out;
 	}
