diff -rup systemd-232/src/network/networkd-link.c systemd-232-new/src/network/networkd-link.c
--- systemd-232/src/network/networkd-link.c	2016-11-03 10:16:42.000000000 -0700
+++ systemd-232-new/src/network/networkd-link.c	2016-11-18 11:19:04.687209642 -0800
@@ -199,6 +199,26 @@ static bool link_proxy_arp_enabled(Link
         return true;
 }
 
+static bool link_ipv6_disabled(Link *link) {
+        const char *p = NULL;
+        int r;
+        if (link->flags & IFF_LOOPBACK)
+                return true;
+        /* Make this a NOP if IPv6 is not available */
+        if (!socket_ipv6_is_supported())
+                return true;
+
+        p = strjoina("/proc/sys/net/ipv6/conf/", link->ifname, "/disable_ipv6");
+        _cleanup_free_ char *val = NULL;
+        r = read_one_line_file(p, &val);
+        if (r < 0)
+                log_link_warning_errno(link, r, "Cannot read ipv6 state for interface: %m");
+	if (streq(val, "0"))
+                return false;
+        
+        return true;
+}
+
 static bool link_ipv6_accept_ra_enabled(Link *link) {
         assert(link);
 
@@ -720,7 +740,7 @@ void link_check_ready(Link *link) {
                     !link->ipv4ll_route)
                         return;
 
-        if (link_ipv6ll_enabled(link))
+        if (!link_ipv6_disabled(link) && link_ipv6ll_enabled(link))
                 if (in_addr_is_null(AF_INET6, (const union in_addr_union*) &link->ipv6ll_address) > 0)
                         return;
 
